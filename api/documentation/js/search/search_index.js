var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AppLogger.html",[0,0.129,1,2.545]],["body/classes/AppLogger.html",[0,0.132,1,3.532,2,0.981,3,0.237,4,0.237,5,0.176,6,2.961,7,2.652,8,4.004,9,0.302,10,1.511,11,4.01,12,2.234,13,4.736,14,4.736,15,1.258,16,6.013,17,5.754,18,0.709,19,3.498,20,1.417,21,0.025,22,1.019,23,0.502,24,1.244,25,1.97,26,1.511,27,3.532,28,4.736,29,4.004,30,4.546,31,3.498,32,2.608,33,0.364,34,0.703,35,4.736,36,0.237,37,1.272,38,4.736,39,3.498,40,3.498,41,3.498,42,3.498,43,3.498,44,3.498,45,0.013,46,0.017,47,0.013]],["title/modules/AppModule.html",[48,1.162,49,2.287]],["body/modules/AppModule.html",[0,0.125,3,0.224,4,0.224,5,0.167,21,0.025,33,0.49,34,0.664,36,0.224,45,0.012,46,0.016,47,0.012,48,1.776,49,4.521,50,1.474,51,1.709,52,2.017,53,2.017,54,1.709,55,2.017,56,2.017,57,2.799,58,2.799,59,3.718,60,3.412,61,3.718,62,3.718,63,3.718,64,2.78,65,2.017,66,2.017,67,3.305,68,3.054,69,2.216,70,1.585,71,3.305,72,3.305,73,3.305,74,3.305,75,3.305,76,2.465,77,2.799,78,3.305,79,3.305,80,1.776,81,3.305,82,3.305,83,3.305,84,2.551,85,3.305]],["title/injectables/AuthService.html",[86,1.162,87,1.764]],["body/injectables/AuthService.html",[0,0.105,3,0.189,4,0.189,5,0.14,9,0.24,10,1.288,12,1.679,15,1.079,18,0.779,20,1.557,21,0.025,22,1.12,23,0.552,24,1.367,26,1.515,33,0.443,34,0.559,36,0.189,37,1.726,45,0.01,46,0.015,47,0.01,86,1.374,87,2.086,88,1.439,89,2.357,90,3.208,91,3.416,92,4.019,93,3.009,94,1.934,95,2.783,96,5.762,97,3.073,98,2.783,99,4.035,100,2.366,101,2.783,102,2.783,103,3.175,104,2.783,105,3.416,106,3.175,107,2.783,108,1.934,109,3.416,110,2.076,111,2.076,112,1.866,113,2.357,114,2.783,115,1.866,116,1.679,117,2.357,118,2.783,119,1.335,120,1.515,121,2.783,122,2.783,123,2.783,124,2.658,125,2.783,126,2.783,127,2.783,128,2.783,129,2.076,130,1.242,131,2.783]],["title/modules/CommonModule.html",[48,1.162,59,2.082]],["body/modules/CommonModule.html",[0,0.19,3,0.341,4,0.341,5,0.254,21,0.024,33,0.387,34,1.011,36,0.341,45,0.018,46,0.021,47,0.018,48,2.032,50,2.243,59,3.639,132,5.029]],["title/classes/CreateDialogDto.html",[0,0.129,133,2.287]],["body/classes/CreateDialogDto.html",[0,0.189,2,1.064,3,0.258,4,0.258,5,0.192,7,2.801,9,0.328,15,0.937,18,0.838,21,0.025,23,0.673,33,0.431,36,0.258,45,0.014,46,0.018,47,0.014,80,1.704,133,3.353,134,4.235,135,2.831,136,3.77,137,1.314,138,3.353,139,3.73,140,4.172,141,1.963,142,1.963,143,5.002,144,1.47,145,5.002,146,3.796,147,4.235,148,4.235,149,3.796,150,3.796,151,3.796,152,1.693,153,2.126,154,3.796,155,2.545]],["title/classes/CreateMessagDto.html",[0,0.129,156,2.287]],["body/classes/CreateMessagDto.html",[0,0.198,2,1.141,3,0.276,4,0.276,5,0.205,9,0.351,15,1.211,18,0.866,21,0.025,23,0.613,33,0.313,36,0.276,45,0.015,46,0.019,47,0.015,137,1.375,144,1.52,152,1.815,156,3.507,157,5.17,158,2.727,159,2.991,160,2.407,161,4.898,162,3.529,163,3.034,164,4.711,165,3.445,166,4.068]],["title/classes/CreateUserDto.html",[0,0.129,103,2.082]],["body/classes/CreateUserDto.html",[0,0.198,2,1.141,3,0.276,4,0.276,5,0.205,7,2.93,9,0.351,15,1.084,18,0.784,21,0.025,23,0.555,33,0.403,36,0.276,45,0.015,46,0.019,47,0.015,103,3.192,106,3.529,108,2.509,116,2.407,137,1.375,144,1.375,148,3.445,152,1.815,153,2.278,167,4.431,168,3.034,169,3.726,170,5.233,171,5.233,172,5.233,173,3.445,174,3.445,175,4.068,176,3.445,177,4.068]],["title/classes/DeleteMessageDto.html",[0,0.129,178,2.287]],["body/classes/DeleteMessageDto.html",[0,0.213,2,1.29,3,0.312,4,0.312,5,0.232,9,0.397,15,1.059,18,0.689,21,0.025,23,0.488,33,0.354,36,0.312,45,0.017,46,0.02,47,0.017,137,1.485,144,1.208,152,2.051,158,3.083,163,3.43,164,4.563,178,3.789,179,4.786,180,4.563]],["title/classes/Dialog.html",[0,0.129,160,1.42]],["body/classes/Dialog.html",[0,0.108,2,0.802,3,0.194,4,0.194,5,0.144,9,0.247,12,2.324,15,1.149,18,0.836,21,0.025,23,0.681,25,2.324,33,0.43,36,0.327,37,1.041,45,0.01,46,0.015,47,0.01,80,0.975,84,1.602,100,2.33,113,2.423,119,2.311,137,1.081,138,3.231,139,3.595,140,3.595,141,2.128,144,1.468,160,1.712,181,1.918,182,4.082,183,3.595,184,2.861,185,2.423,186,2.759,187,4.464,188,2.861,189,4.116,190,2.861,191,2.861,192,2.861,193,2.861,194,4.165,195,2.134,196,1.918,197,1.19,198,1.746,199,1.602,200,2.861,201,3.485,202,4.082,203,4.082,204,4.082,205,1.918,206,2.423,207,1.918,208,1.918]],["title/controllers/DialogsController.html",[209,1.522,210,2.287]],["body/controllers/DialogsController.html",[0,0.091,3,0.164,4,0.164,5,0.122,9,0.208,10,1.158,15,1.233,18,0.819,20,1.557,21,0.025,22,1.12,23,0.552,24,1.367,26,1.746,33,0.421,34,0.484,36,0.164,45,0.009,46,0.013,47,0.009,115,1.615,116,1.002,120,1.746,133,3.253,136,2.961,144,1.437,153,2.442,155,1.615,159,3.019,160,1.002,197,1.002,209,1.075,210,2.431,211,1.075,212,2.04,213,1.615,214,2.41,215,2.431,216,2.924,217,2.717,218,3.071,219,3.071,220,2.41,221,3.252,222,2.41,223,3.666,224,1.615,225,3.627,226,2.41,227,3.915,228,2.41,229,2.04,230,4.355,231,3.627,232,2.41,233,2.04,234,3.627,235,2.41,236,1.615,237,3.627,238,2.41,239,1.797,240,2.04,241,1.797,242,1.615,243,2.031,244,1.615,245,2.255,246,2.04,247,2.41,248,2.41,249,1.615,250,2.41,251,2.41,252,2.41,253,2.41,254,2.41,255,2.41,256,3.627,257,2.41,258,2.41,259,2.41,260,2.41,261,2.41]],["title/modules/DialogsModule.html",[48,1.162,60,1.911]],["body/modules/DialogsModule.html",[0,0.141,3,0.254,4,0.254,5,0.189,21,0.025,22,0.805,33,0.473,34,0.752,36,0.254,45,0.013,46,0.018,47,0.013,48,1.892,50,1.669,51,1.934,52,2.282,53,2.282,54,1.934,55,3.388,56,3.388,60,3.61,64,3.022,65,2.282,66,2.282,68,2.507,69,2.507,70,1.794,155,2.507,160,1.556,198,2.282,205,3.321,210,3.723,211,2.21,245,3.509,246,3.167,262,3.167,263,3.167,264,3.167,265,3.741,266,3.741,267,2.79]],["title/injectables/DialogsService.html",[86,1.162,245,1.764]],["body/injectables/DialogsService.html",[0,0.087,3,0.156,4,0.156,5,0.116,9,0.199,10,1.118,12,0.957,18,0.862,20,1.722,21,0.026,22,1.239,23,0.503,24,1.513,26,1.783,33,0.393,34,0.462,36,0.156,45,0.008,46,0.013,47,0.008,70,1.103,80,1.444,86,1.193,88,1.19,90,2.778,94,1.679,116,0.957,120,1.783,124,1.961,130,1.892,138,2.348,153,1.961,155,1.542,160,2.235,199,1.288,215,2.348,216,2.348,217,1.961,218,2.966,219,2.966,224,2.348,227,3.859,229,2.966,230,4.294,233,2.966,236,2.348,245,1.811,268,1.948,269,2.966,270,2.301,271,3.535,272,2.301,273,3.503,274,3.503,275,4.007,276,2.301,277,2.301,278,3.503,279,2.273,280,2.301,281,1.716,282,1.948,283,2.966,284,2.301,285,2.301,286,2.301,287,2.301,288,1.716,289,1.716,290,1.404,291,2.301,292,2.301,293,4.241,294,2.301,295,2.301,296,2.301,297,4.241,298,3.163,299,2.301,300,2.301]],["title/classes/ExceptionsFilter.html",[0,0.129,301,2.545]],["body/classes/ExceptionsFilter.html",[0,0.121,2,0.898,3,0.217,4,0.217,5,0.162,7,2.496,8,4.5,9,0.276,10,1.423,12,2.133,18,0.667,20,0.958,21,0.025,22,0.689,23,0.473,24,0.841,25,1.332,26,1.022,33,0.427,34,0.896,36,0.217,37,1.865,45,0.012,46,0.016,47,0.012,80,1.091,120,1.022,130,1.988,137,1.171,141,2.304,142,1.655,301,3.324,302,4.341,303,2.711,304,5.127,305,5.544,306,4.457,307,4.457,308,3.202,309,4.457,310,5.828,311,5.544,312,5.544,313,5.544,314,3.202,315,4.457,316,2.711,317,3.202,318,3.202,319,3.202,320,3.202,321,3.202,322,2.711,323,3.202,324,3.202,325,3.202,326,3.202,327,3.202,328,3.202,329,3.202,330,3.202,331,3.202,332,3.202,333,3.202]],["title/classes/FileUploadDto.html",[0,0.129,334,2.287]],["body/classes/FileUploadDto.html",[0,0.168,2,1.25,3,0.303,4,0.303,5,0.319,9,0.385,15,1.039,18,0.668,21,0.025,23,0.588,30,4.695,33,0.343,36,0.303,45,0.016,46,0.02,47,0.016,137,1.457,144,1.171,197,1.855,334,3.717,335,4.695,336,3.775,337,4.459,338,4.695,339,5.545,340,4.459,341,5.545]],["title/controllers/FilesController.html",[209,1.522,342,2.287]],["body/controllers/FilesController.html",[0,0.111,3,0.2,4,0.2,5,0.297,9,0.255,10,1.343,15,0.553,18,0.63,20,1.259,21,0.025,22,1.056,23,0.313,24,1.106,26,1.343,29,2.202,32,3.658,33,0.452,34,0.593,36,0.2,37,1.074,45,0.011,46,0.015,47,0.011,80,1.434,120,1.343,129,2.202,130,1.317,144,1.106,197,1.228,209,1.317,211,1.317,213,1.979,221,3.139,241,2.202,242,1.979,322,4.787,334,2.822,342,2.822,343,2.202,344,2.952,345,4.209,346,4.209,347,2.952,348,2.952,349,4.154,350,2.952,351,2.952,352,2.952,353,2.952,354,2.952,355,2.952,356,3.564,357,4.209,358,2.952,359,1.801,360,2.952,361,2.5,362,2.5,363,4.209,364,2.952,365,4.209,366,4.209,367,2.952,368,2.952,369,2.952,370,3.139,371,3.139,372,2.952,373,3.658,374,2.5,375,2.952,376,2.952,377,2.952,378,2.952,379,2.5,380,2.952,381,2.952,382,2.952,383,2.952,384,2.952,385,2.952,386,2.952,387,2.952,388,2.202]],["title/modules/FilesModule.html",[48,1.162,61,2.082]],["body/modules/FilesModule.html",[0,0.181,3,0.325,4,0.325,5,0.242,21,0.025,33,0.446,34,0.963,36,0.325,45,0.017,46,0.021,47,0.017,48,1.974,50,2.138,61,3.536,211,2.586,342,4.177,389,4.793,390,4.793]],["title/injectables/JwtStrategy.html",[86,1.162,391,2.082]],["body/injectables/JwtStrategy.html",[0,0.141,3,0.253,4,0.253,5,0.188,7,2.087,9,0.322,10,1.577,18,0.74,20,1.115,21,0.025,22,0.802,23,0.395,24,0.979,26,1.19,33,0.473,34,0.749,36,0.253,45,0.013,46,0.018,47,0.013,76,2.779,84,2.087,86,1.683,88,1.927,90,2.866,93,4.134,94,2.658,100,1.449,108,2.369,119,2.369,120,1.19,391,3.015,392,3.156,393,3.727,394,3.727,395,5.544,396,3.727,397,3.727,398,3.156,399,2.779,400,3.156,401,3.156,402,2.274,403,3.727,404,2.498,405,3.156,406,3.156,407,3.727,408,3.727,409,3.727,410,3.727,411,3.156]],["title/injectables/LocalStrategy.html",[86,1.162,412,2.082]],["body/injectables/LocalStrategy.html",[0,0.131,3,0.236,4,0.236,5,0.175,7,1.945,9,0.3,10,1.505,15,1.159,18,0.706,20,1.41,21,0.025,22,1.015,23,0.5,24,1.238,26,1.109,33,0.442,34,0.698,36,0.236,37,1.263,45,0.012,46,0.017,47,0.012,86,1.606,87,3.198,88,1.796,90,2.766,93,3.515,94,1.666,100,2.08,105,3.991,106,3.66,108,2.565,109,2.941,116,1.445,120,1.109,124,1.945,129,2.591,130,1.55,223,3.16,249,2.329,398,2.941,399,2.591,401,2.941,402,2.119,405,2.941,406,2.941,412,2.876,413,2.941,414,3.474,415,3.474,416,3.474,417,2.941,418,3.474,419,3.474,420,3.474,421,3.474]],["title/classes/Message.html",[0,0.129,25,1.42]],["body/classes/Message.html",[0,0.13,2,0.967,3,0.234,4,0.234,5,0.174,9,0.298,15,1.204,18,0.857,21,0.025,23,0.655,25,1.952,33,0.41,36,0.318,37,1.255,45,0.012,46,0.017,47,0.012,80,1.175,84,1.932,100,1.824,119,2.556,137,1.233,144,1.503,159,2.757,160,2.49,161,4.515,183,3.976,185,3.973,186,3.145,187,4.845,194,4.463,195,2.573,196,2.313,197,1.435,198,2.105,199,1.932,204,3.973,207,2.313,208,2.313,422,2.573,423,3.45,424,3.45,425,3.45,426,3.45,427,2.313,428,2.921]],["title/controllers/MessagesController.html",[209,1.522,429,2.287]],["body/controllers/MessagesController.html",[0,0.137,3,0.246,4,0.246,5,0.183,9,0.313,10,1.547,15,1.024,18,0.542,20,1.083,21,0.025,22,0.78,23,0.384,24,0.951,25,1.507,26,1.156,33,0.482,34,0.728,36,0.246,45,0.013,46,0.017,47,0.013,116,1.507,120,1.156,144,0.951,197,1.507,209,1.615,211,1.615,213,2.428,217,3.06,223,3.25,239,2.701,241,2.701,242,2.428,243,2.715,244,2.428,249,2.428,279,2.798,290,2.209,429,3.25,430,3.066,431,3.066,432,3.622,433,5.302,434,4.848,435,3.622,436,4.105,437,2.701,438,2.825,439,2.701,440,3.622,441,3.622,442,3.622,443,3.622]],["title/classes/MessagesGateway.html",[0,0.129,444,2.287]],["body/classes/MessagesGateway.html",[0,0.073,2,0.546,3,0.132,4,0.132,5,0.098,8,3.742,9,0.168,10,0.982,12,1.587,18,0.84,20,1.572,21,0.025,22,1.131,23,0.594,24,1.38,25,2.186,26,1.601,27,2.294,33,0.386,34,0.391,36,0.132,37,1.576,45,0.007,46,0.011,47,0.007,80,0.663,90,3.08,94,0.933,115,1.305,116,1.803,117,3.229,124,2.135,130,1.372,137,0.808,141,1.006,142,1.006,144,1.24,156,2.905,159,1.59,160,1.28,178,2.905,180,2.294,186,2.556,230,2.294,243,1.722,244,1.305,249,1.305,431,1.648,438,2.594,439,1.451,444,2.062,445,1.648,446,3.076,447,3.814,448,3.814,449,5.017,450,3.076,451,3.076,452,3.076,453,3.076,454,3.076,455,3.814,456,1.946,457,1.946,458,3.076,459,1.946,460,3.814,461,1.946,462,3.076,463,6.399,464,3.814,465,1.946,466,5.254,467,3.076,468,3.076,469,1.946,470,3.076,471,1.946,472,3.076,473,3.076,474,1.946,475,3.076,476,3.076,477,1.946,478,1.946,479,2.905,480,3.076,481,1.946,482,1.946,483,3.076,484,1.648,485,1.946,486,3.076,487,1.648,488,1.946,489,1.946,490,1.946,491,1.946,492,1.946,493,1.946,494,1.946,495,1.946,496,1.946,497,1.946,498,3.076,499,1.946,500,3.076,501,1.946]],["title/modules/MessagesModule.html",[48,1.162,62,2.082]],["body/modules/MessagesModule.html",[0,0.136,3,0.245,4,0.245,5,0.182,21,0.025,22,0.777,25,1.501,33,0.492,34,0.725,36,0.245,45,0.013,46,0.017,47,0.013,48,1.858,50,1.61,51,1.866,52,2.202,53,2.202,54,1.866,55,3.328,56,2.202,60,3.503,62,3.962,64,2.951,65,2.202,66,2.202,68,3.242,69,2.419,70,1.73,198,2.202,211,2.157,267,2.691,427,3.242,429,3.657,437,2.691,438,3.234,439,2.691,444,3.242,502,3.056,503,3.609,504,3.056,505,3.609,506,3.609,507,3.609,508,3.609]],["title/injectables/MessagesService.html",[86,1.162,438,1.764]],["body/injectables/MessagesService.html",[0,0.08,3,0.144,4,0.144,5,0.107,9,0.183,10,1.051,12,1.37,18,0.779,20,1.472,21,0.026,22,1.059,23,0.428,24,1.292,25,2.259,26,1.57,29,1.584,33,0.401,34,0.427,36,0.144,37,1.893,45,0.008,46,0.012,47,0.008,70,1.018,80,0.724,86,1.122,88,1.098,90,3.258,94,1.579,116,1.37,119,1.934,120,1.57,124,3.142,130,0.948,141,1.098,142,1.098,153,1.844,159,2.543,160,2.165,182,3.416,186,1.424,199,1.189,215,2.208,216,2.208,217,2.259,224,2.208,227,2.704,236,2.208,245,2.807,271,3.39,275,3.009,279,2.179,281,2.456,288,1.584,289,1.584,290,1.296,298,1.584,436,1.799,437,1.584,438,1.703,509,1.799,510,4.545,511,2.124,512,2.124,513,3.294,514,3.294,515,2.124,516,2.124,517,2.124,518,2.124,519,2.124,520,2.124,521,2.124,522,2.124,523,2.124,524,2.124,525,3.294,526,2.124,527,2.124,528,2.124,529,2.124,530,2.124,531,2.124,532,2.124,533,2.124,534,2.124,535,3.009,536,1.584,537,1.584,538,1.799,539,1.799,540,2.124,541,2.124,542,1.799,543,1.799,544,2.124,545,2.124,546,2.124,547,2.124,548,2.124]],["title/interfaces/Metadata.html",[549,2.082,550,2.287]],["body/interfaces/Metadata.html",[3,0.215,4,0.215,5,0.16,9,0.274,15,1.127,21,0.025,22,1.188,23,0.694,24,1.736,33,0.393,34,0.637,36,0.215,45,0.011,46,0.016,47,0.011,120,1.012,137,1.163,197,1.32,201,4.675,349,4.675,549,1.935,550,3.42,551,2.365,552,2.365,553,5.521,554,5.521,555,5.521,556,5.101,557,5.101,558,5.101,559,5.101,560,5.101,561,5.521,562,6.016,563,3.172,564,3.172,565,3.172,566,3.172,567,2.686,568,2.686,569,3.172,570,3.172]],["title/classes/SearchQueries.html",[0,0.129,279,1.636]],["body/classes/SearchQueries.html",[0,0.195,2,1.114,3,0.27,4,0.27,5,0.2,9,0.343,15,0.965,18,0.857,21,0.025,23,0.606,24,1.688,33,0.306,36,0.27,45,0.014,46,0.019,47,0.014,137,1.354,144,1.503,152,1.772,162,3.144,279,2.471,535,4.265,536,4.265,537,4.265,571,3.364,572,5.125,573,5.154,574,3.973,575,3.973,576,3.973,577,3.973,578,5.72,579,6.052]],["title/classes/UpdateDialogDto.html",[0,0.129,136,2.082]],["body/classes/UpdateDialogDto.html",[0,0.201,2,1.173,3,0.284,4,0.284,5,0.211,9,0.361,15,1.156,18,0.798,21,0.025,23,0.565,33,0.322,36,0.284,45,0.015,46,0.019,47,0.015,80,2.102,135,3.121,136,3.251,137,1.4,138,3.929,139,4.371,144,1.4,147,4.511,152,1.867,162,3.576,580,4.963,581,4.185,582,4.185,583,5.328]],["title/classes/UpdateMessageDto.html",[0,0.129,479,2.287]],["body/classes/UpdateMessageDto.html",[0,0.205,2,1.208,3,0.292,4,0.292,5,0.217,9,0.372,15,1.168,18,0.813,21,0.025,23,0.575,33,0.332,36,0.292,45,0.015,46,0.02,47,0.015,137,1.426,144,1.426,152,1.922,158,2.888,159,3.072,162,3.625,163,3.213,164,4.431,165,3.648,180,4.431,479,3.638,584,5.031]],["title/classes/UpdateUserDto.html",[0,0.129,169,2.082]],["body/classes/UpdateUserDto.html",[0,0.212,2,1.278,3,0.309,4,0.309,5,0.23,9,0.394,15,1.053,18,0.683,21,0.024,23,0.483,33,0.351,36,0.309,45,0.016,46,0.02,47,0.016,108,2.922,137,1.477,144,1.198,152,2.033,162,3.429,168,3.399,169,3.429,173,3.859,174,3.859,585,4.759,586,3.859,587,4.558]],["title/interfaces/UploadedFile.html",[359,2.082,549,2.082]],["body/interfaces/UploadedFile.html",[3,0.246,4,0.246,5,0.183,9,0.313,15,1.309,21,0.024,23,0.698,32,4.352,36,0.246,45,0.013,46,0.017,47,0.013,137,1.274,356,4.942,359,2.958,379,4.942,549,2.209,551,2.701,572,4.627,588,3.066,589,6.395,590,5.836,591,5.836,592,5.836,593,5.836,594,5.836]],["title/classes/User.html",[0,0.129,100,1.327]],["body/classes/User.html",[0,0.105,2,0.783,3,0.189,4,0.189,5,0.141,9,0.241,10,1.29,15,1.23,18,0.864,20,1.209,21,0.025,22,0.87,23,0.611,24,1.062,26,1.29,27,2.081,33,0.401,36,0.274,37,1.47,45,0.01,46,0.015,47,0.01,80,1.619,84,1.563,100,1.572,106,2.466,108,2.499,111,2.081,112,1.871,119,2.499,120,0.891,137,1.062,144,1.369,183,4.125,194,3.886,195,2.081,196,1.871,197,1.161,207,1.871,208,1.871,586,3.423,595,2.081,596,4.683,597,4.025,598,4.043,599,4.043,600,2.791,601,4.043,602,2.791,603,2.791,604,2.791,605,4.043,606,2.791,607,4.043,608,2.791,609,4.043,610,2.791,611,5.212,612,2.791,613,4.754,614,2.791,615,4.043,616,4.043,617,4.043,618,4.043,619,4.043,620,4.043,621,2.791,622,2.791,623,1.871,624,2.363]],["title/controllers/UsersController.html",[209,1.522,625,2.287]],["body/controllers/UsersController.html",[0,0.091,3,0.163,4,0.163,5,0.121,9,0.208,10,1.156,12,1.506,18,0.779,20,1.555,21,0.025,22,1.221,23,0.462,24,1.366,26,1.659,33,0.459,34,0.483,36,0.163,45,0.009,46,0.013,47,0.009,87,2.252,91,3.065,92,3.065,94,1.153,97,2.252,100,1.693,103,2.957,106,1.467,108,1.153,115,1.611,116,1.506,119,1.736,120,1.659,144,1.366,159,3.017,169,2.957,197,1,209,1.072,211,1.072,213,1.611,217,2.027,221,1.793,223,3.663,239,1.793,240,3.065,242,1.611,243,2.714,244,1.611,279,2.324,282,2.035,290,1.467,402,1.467,404,1.611,433,3.688,625,2.427,626,2.035,627,2.404,628,3.621,629,4.355,630,2.404,631,2.404,632,2.404,633,2.404,634,2.404,635,2.404,636,2.404,637,2.404,638,2.404,639,4.104,640,2.404,641,3.621,642,2.404,643,2.404,644,2.404,645,2.404,646,2.404,647,2.404,648,2.7,649,2.035,650,2.035,651,2.404,652,2.404,653,2.404,654,2.404,655,2.404,656,2.404,657,2.404,658,2.404,659,2.404,660,2.404,661,2.404,662,2.404,663,2.404,664,2.404]],["title/modules/UsersModule.html",[48,1.162,63,2.082]],["body/modules/UsersModule.html",[0,0.119,3,0.214,4,0.214,5,0.159,21,0.025,22,0.679,33,0.503,34,0.634,36,0.214,45,0.011,46,0.016,47,0.011,48,1.732,50,1.406,51,1.63,52,1.923,53,1.923,54,1.63,55,3.102,56,1.923,63,4.028,64,2.69,65,1.923,66,1.923,68,2.113,69,2.113,70,1.511,76,2.351,77,2.669,87,3.104,97,3.104,100,1.225,110,2.351,198,1.923,211,1.967,267,2.351,391,3.663,402,1.923,404,2.113,411,2.669,412,3.663,623,2.955,625,3.408,649,2.669,650,2.669,665,2.669,666,2.669,667,3.153,668,3.153,669,4.409,670,3.153,671,3.153,672,3.153,673,3.153,674,3.153,675,3.153,676,3.153,677,3.153]],["title/injectables/UsersService.html",[86,1.162,97,1.764]],["body/injectables/UsersService.html",[0,0.078,3,0.14,4,0.14,5,0.104,9,0.178,10,1.026,12,1.86,15,0.386,18,0.855,20,1.662,21,0.025,22,1.196,23,0.545,24,1.459,26,1.713,33,0.395,34,0.414,36,0.14,37,1.439,45,0.007,46,0.012,47,0.007,70,0.988,80,0.702,86,1.095,88,1.065,90,3.124,94,1.542,97,1.663,100,2.159,108,2.144,111,1.536,112,1.381,116,1.86,119,0.988,120,1.713,124,2.503,130,0.919,137,0.845,141,1.663,142,1.663,153,1.801,176,1.744,199,1.153,215,2.156,216,2.156,217,2.215,224,2.156,227,2.997,236,2.156,269,2.723,271,3.334,275,4.257,279,2.144,281,1.536,283,2.723,288,1.536,289,1.536,290,1.257,298,1.536,404,1.381,535,2.95,536,1.536,537,1.536,538,1.744,539,1.744,542,1.744,543,1.744,596,3.35,597,2.723,678,1.744,679,3.956,680,3.956,681,3.216,682,2.06,683,3.216,684,3.216,685,3.216,686,2.06,687,2.06,688,2.06,689,2.06,690,2.06,691,3.956,692,2.06,693,3.216,694,2.06,695,2.06,696,2.06,697,2.06,698,3.956,699,2.06,700,4.471,701,2.06,702,3.956,703,2.06,704,2.06,705,2.06,706,2.06,707,2.06,708,2.06]],["title/coverage.html",[709,3.473]],["body/coverage.html",[0,0.243,1,1.76,5,0.119,6,1.998,21,0.025,23,0.25,25,0.982,45,0.008,46,0.013,47,0.008,54,1.22,86,1.848,87,1.22,89,1.998,97,1.22,100,0.917,103,1.439,130,1.052,133,1.582,134,1.998,135,2.662,136,1.439,156,1.582,157,1.998,158,2.887,160,0.982,167,1.998,168,2.662,169,1.439,178,1.582,179,1.998,181,2.393,205,1.582,209,2.142,210,1.582,212,1.998,243,1.321,245,1.22,268,1.998,279,1.131,301,1.76,302,1.998,303,1.998,334,1.582,335,1.998,336,1.998,342,1.582,343,2.662,359,1.439,370,1.76,371,1.76,373,1.76,388,1.76,391,1.439,392,1.998,412,1.439,413,1.998,422,2.662,427,1.582,429,1.582,430,1.998,438,1.22,444,1.582,445,1.998,479,1.582,509,1.998,549,2.178,550,1.582,552,2.662,567,3.646,571,1.998,580,1.998,584,1.998,585,1.998,588,1.998,595,2.662,623,1.582,625,1.582,626,1.998,648,1.76,678,1.998,709,1.76,710,2.359,711,2.359,712,2.359,713,3.023,714,5.803,715,1.998,716,6.946,717,6.152,718,1.998,719,2.359,720,4.306,721,5.803,722,4.306,723,2.359,724,3.57,725,4.802,726,4.306,727,3.023,728,1.998,729,3.57,730,2.359,731,2.359]],["title/dependencies.html",[51,2.122,732,2.85]],["body/dependencies.html",[0,0.189,21,0.025,34,0.766,45,0.014,46,0.018,47,0.014,51,1.97,70,1.827,110,2.842,112,2.554,152,1.7,196,2.554,197,1.585,199,2.134,316,3.226,361,4.246,362,4.246,399,4.18,400,3.226,402,2.325,417,3.226,484,3.226,487,3.226,550,2.554,733,6.188,734,5.015,735,5.015,736,3.811,737,3.811,738,3.811,739,3.811,740,3.811,741,3.811,742,3.811,743,3.811,744,3.811,745,3.811,746,3.811,747,3.811,748,3.811,749,3.811,750,3.811,751,3.811,752,3.811,753,3.811,754,3.811,755,3.811,756,3.811,757,3.811,758,3.811,759,3.811]],["title/miscellaneous/enumerations.html",[760,1.596,761,3.475]],["body/miscellaneous/enumerations.html",[9,0.428,12,2.46,21,0.024,45,0.018,46,0.021,47,0.018,140,4.41,142,3.268,181,3.322,202,5.007,203,5.007,760,2.775,761,4.196,762,4.196]],["title/miscellaneous/functions.html",[760,1.596,763,3.475]],["body/miscellaneous/functions.html",[9,0.42,20,1.454,21,0.023,22,1.046,24,1.277,45,0.017,46,0.021,47,0.017,54,3.241,243,3.511,552,3.625,568,4.116,648,4.36,718,4.116,728,4.116,760,2.722,763,4.116,764,4.861,765,4.861,766,4.861,767,4.861]],["title/index.html",[9,0.246,768,2.85,769,2.85]],["body/index.html",[21,0.025,45,0.016,46,0.02,47,0.016,709,3.268,770,4.382,771,6.688,772,4.382,773,4.382,774,4.382,775,6.592,776,4.382,777,4.382,778,5.485,779,4.382,780,3.71,781,4.382,782,4.382,783,5.485,784,5.485,785,4.382,786,4.382,787,4.382]],["title/modules.html",[50,2.077]],["body/modules.html",[21,0.021,45,0.017,46,0.021,47,0.017,49,3.168,50,2.108,59,2.884,60,2.647,61,2.884,62,2.884,63,2.884,788,6.443,789,6.443,790,6.443,791,6.714,792,5.747,793,5.747]],["title/overview.html",[794,3.943]],["body/overview.html",[2,0.967,21,0.025,45,0.012,46,0.017,47,0.012,48,1.175,49,4.493,50,1.539,51,1.784,52,2.105,53,2.105,54,1.784,55,2.105,56,2.105,57,2.921,58,2.921,59,3.253,60,3.537,61,3.253,62,3.853,63,4.058,64,2.863,65,2.105,66,2.105,87,2.757,88,1.784,97,2.757,211,1.539,245,3.265,262,2.921,263,2.921,264,2.921,391,3.253,412,3.253,438,2.757,502,2.921,504,2.921,551,2.573,665,2.921,666,2.921,794,2.921,795,4.692,796,3.45,797,3.45,798,3.45]],["title/miscellaneous/variables.html",[760,1.596,799,3.475]],["body/miscellaneous/variables.html",[5,0.222,9,0.272,11,2.669,15,0.59,21,0.025,22,0.949,23,0.334,37,2.003,45,0.011,46,0.016,47,0.011,80,1.876,84,3.083,120,1.006,141,3.251,142,3.251,181,2.113,205,2.955,206,2.669,207,3.408,208,3.408,338,2.669,343,2.351,359,1.923,370,3.288,371,3.288,373,3.288,374,2.669,388,3.288,422,2.351,427,2.955,428,2.669,595,2.351,623,2.955,624,2.669,639,3.733,713,2.669,715,3.733,727,2.669,760,1.765,762,2.669,780,2.669,799,2.669,800,3.153,801,4.409,802,4.409,803,3.153,804,3.153,805,4.409,806,3.153,807,3.153,808,3.153,809,3.153,810,3.153,811,3.153,812,3.153,813,3.153,814,3.153,815,3.153,816,4.409,817,3.153,818,3.153,819,3.153,820,3.153,821,3.153,822,3.153,823,3.153,824,3.153,825,3.153]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/CreateDialogDto.html":{},"classes/CreateMessagDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMessageDto.html":{},"classes/Dialog.html":{},"controllers/DialogsController.html":{},"modules/DialogsModule.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"interfaces/Metadata.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["0.11.1",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["10000",{"_index":617,"title":{},"body":{"classes/User.html":{}}}],["11000",{"_index":319,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["15",{"_index":797,"title":{},"body":{"overview.html":{}}}],["16).tostring(16",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":798,"title":{},"body":{"overview.html":{}}}],["2.1.0",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["2592000000s",{"_index":677,"title":{},"body":{"modules/UsersModule.html":{}}}],["3",{"_index":605,"title":{},"body":{"classes/User.html":{}}}],["3.0.2",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":796,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["4.17.15",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["4.5.1",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":330,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["5.9.7",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["512",{"_index":618,"title":{},"body":{"classes/User.html":{}}}],["6",{"_index":795,"title":{},"body":{"overview.html":{}}}],["6.4.0",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["7.0.7",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["_.pick(this",{"_index":621,"title":{},"body":{"classes/User.html":{}}}],["_.pick(user",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{}}}],["__dirname",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{},"classes/Dialog.html":{},"injectables/JwtStrategy.html":{},"classes/Message.html":{},"injectables/MessagesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["access_token",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{}}}],["allowed",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":646,"title":{},"body":{"controllers/UsersController.html":{}}}],["apibody",{"_index":363,"title":{},"body":{"controllers/FilesController.html":{}}}],["apiconsumes",{"_index":364,"title":{},"body":{"controllers/FilesController.html":{}}}],["apiconsumes('multipart/form",{"_index":381,"title":{},"body":{"controllers/FilesController.html":{}}}],["apihideproperty",{"_index":183,"title":{},"body":{"classes/Dialog.html":{},"classes/Message.html":{},"classes/User.html":{}}}],["apihideproperty()@prop",{"_index":601,"title":{},"body":{"classes/User.html":{}}}],["apiparam",{"_index":365,"title":{},"body":{"controllers/FilesController.html":{}}}],["apiproperty",{"_index":341,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["apiproperty({type",{"_index":337,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["apiqueries",{"_index":648,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiqueries(fileds",{"_index":568,"title":{},"body":{"interfaces/Metadata.html":{},"miscellaneous/functions.html":{}}}],["apiqueries(undefined)@useguards(undefined)@post('login",{"_index":637,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiquery",{"_index":563,"title":{},"body":{"interfaces/Metadata.html":{}}}],["apiquery(query",{"_index":570,"title":{},"body":{"interfaces/Metadata.html":{}}}],["apitags",{"_index":242,"title":{},"body":{"controllers/DialogsController.html":{},"controllers/FilesController.html":{},"controllers/MessagesController.html":{},"controllers/UsersController.html":{}}}],["apitags('dialogs",{"_index":247,"title":{},"body":{"controllers/DialogsController.html":{}}}],["apitags('files",{"_index":375,"title":{},"body":{"controllers/FilesController.html":{}}}],["apitags('messages",{"_index":440,"title":{},"body":{"controllers/MessagesController.html":{}}}],["apitags('users",{"_index":651,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":773,"title":{},"body":{"index.html":{}}}],["applogger",{"_index":1,"title":{"classes/AppLogger.html":{}},"body":{"classes/AppLogger.html":{},"coverage.html":{}}}],["applydecorators",{"_index":566,"title":{},"body":{"interfaces/Metadata.html":{}}}],["applydecorators(...fileds.map(query",{"_index":569,"title":{},"body":{"interfaces/Metadata.html":{}}}],["appmodule",{"_index":49,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":464,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["argumentshost",{"_index":313,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["array(4",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DialogsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":243,"title":{},"body":{"controllers/DialogsController.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["auth()@get",{"_index":631,"title":{},"body":{"controllers/UsersController.html":{}}}],["auth()@get('info",{"_index":634,"title":{},"body":{"controllers/UsersController.html":{}}}],["auth()@put",{"_index":644,"title":{},"body":{"controllers/UsersController.html":{}}}],["auth.service",{"_index":418,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["auth/auth.service",{"_index":649,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["auth/jwt.strategy",{"_index":671,"title":{},"body":{"modules/UsersModule.html":{}}}],["auth/local.strategy",{"_index":670,"title":{},"body":{"modules/UsersModule.html":{}}}],["authguard",{"_index":647,"title":{},"body":{"controllers/UsersController.html":{}}}],["authservice",{"_index":87,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":793,"title":{},"body":{"modules.html":{}}}],["await",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DialogsService.html":{},"injectables/LocalStrategy.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception",{"_index":358,"title":{},"body":{"controllers/FilesController.html":{}}}],["badrequestexception('file",{"_index":383,"title":{},"body":{"controllers/FilesController.html":{}}}],["badrequestexception(error",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baseexceptionfilter",{"_index":304,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["binary",{"_index":339,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["body",{"_index":159,"title":{},"body":{"classes/CreateMessagDto.html":{},"controllers/DialogsController.html":{},"classes/Message.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{},"classes/UpdateMessageDto.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":562,"title":{},"body":{"interfaces/Metadata.html":{}}}],["bootstrap",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/DialogsModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":791,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":788,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":589,"title":{},"body":{"interfaces/UploadedFile.html":{}}}],["buildschema",{"_index":195,"title":{},"body":{"classes/Dialog.html":{},"classes/Message.html":{},"classes/User.html":{}}}],["buildschema(dialog",{"_index":206,"title":{},"body":{"classes/Dialog.html":{},"miscellaneous/variables.html":{}}}],["buildschema(message",{"_index":428,"title":{},"body":{"classes/Message.html":{},"miscellaneous/variables.html":{}}}],["buildschema(user",{"_index":624,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["callback",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback(new",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback(null",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":325,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["catch",{"_index":305,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["catch(exception",{"_index":309,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["channel",{"_index":203,"title":{},"body":{"classes/Dialog.html":{},"miscellaneous/enumerations.html":{}}}],["checkpassword",{"_index":598,"title":{},"body":{"classes/User.html":{}}}],["checkpassword(password",{"_index":607,"title":{},"body":{"classes/User.html":{}}}],["class",{"_index":0,"title":{"classes/AppLogger.html":{},"classes/CreateDialogDto.html":{},"classes/CreateMessagDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMessageDto.html":{},"classes/Dialog.html":{},"classes/ExceptionsFilter.html":{},"classes/FileUploadDto.html":{},"classes/Message.html":{},"classes/MessagesGateway.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/CreateDialogDto.html":{},"classes/CreateMessagDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMessageDto.html":{},"classes/Dialog.html":{},"controllers/DialogsController.html":{},"modules/DialogsModule.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AppLogger.html":{},"classes/CreateDialogDto.html":{},"classes/CreateMessagDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMessageDto.html":{},"classes/Dialog.html":{},"classes/ExceptionsFilter.html":{},"classes/FileUploadDto.html":{},"classes/Message.html":{},"classes/MessagesGateway.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["client",{"_index":466,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["client.id",{"_index":500,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["client.to(dialog).emit('send",{"_index":492,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["client.to(dialog).emit('typing",{"_index":497,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["client.to(message.dialog).emit('delete",{"_index":494,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["client.to(message.dialog).emit('update",{"_index":496,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["cluster_appmodule",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_dialogsmodule",{"_index":262,"title":{},"body":{"modules/DialogsModule.html":{},"overview.html":{}}}],["cluster_dialogsmodule_exports",{"_index":263,"title":{},"body":{"modules/DialogsModule.html":{},"overview.html":{}}}],["cluster_dialogsmodule_providers",{"_index":264,"title":{},"body":{"modules/DialogsModule.html":{},"overview.html":{}}}],["cluster_messagesmodule",{"_index":502,"title":{},"body":{"modules/MessagesModule.html":{},"overview.html":{}}}],["cluster_messagesmodule_imports",{"_index":503,"title":{},"body":{"modules/MessagesModule.html":{}}}],["cluster_messagesmodule_providers",{"_index":504,"title":{},"body":{"modules/MessagesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":665,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":666,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["collectionformat",{"_index":553,"title":{},"body":{"interfaces/Metadata.html":{}}}],["common/common.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["common/config",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["commonmodule",{"_index":59,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["config",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{}}}],["config.jwt_secret",{"_index":411,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{}}}],["connected",{"_index":501,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["console.error",{"_index":42,"title":{},"body":{"classes/AppLogger.html":{}}}],["const",{"_index":37,"title":{},"body":{"classes/AppLogger.html":{},"injectables/AuthService.html":{},"classes/Dialog.html":{},"classes/ExceptionsFilter.html":{},"controllers/FilesController.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DialogsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":414,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(dialogmodel",{"_index":270,"title":{},"body":{"injectables/DialogsService.html":{}}}],["constructor(jwtservice",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(messagemodel",{"_index":511,"title":{},"body":{"injectables/MessagesService.html":{}}}],["constructor(messagesservice",{"_index":456,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["constructor(private",{"_index":249,"title":{},"body":{"controllers/DialogsController.html":{},"injectables/LocalStrategy.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{}}}],["constructor(usermodel",{"_index":682,"title":{},"body":{"injectables/UsersService.html":{}}}],["context",{"_index":17,"title":{},"body":{"classes/AppLogger.html":{}}}],["controller",{"_index":209,"title":{"controllers/DialogsController.html":{},"controllers/FilesController.html":{},"controllers/MessagesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/DialogsController.html":{},"controllers/FilesController.html":{},"controllers/MessagesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('dialogs",{"_index":248,"title":{},"body":{"controllers/DialogsController.html":{}}}],["controller('files",{"_index":376,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('messages",{"_index":441,"title":{},"body":{"controllers/MessagesController.html":{}}}],["controller('users",{"_index":652,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":211,"title":{},"body":{"controllers/DialogsController.html":{},"modules/DialogsModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/MessagesController.html":{},"modules/MessagesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":709,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":215,"title":{},"body":{"controllers/DialogsController.html":{},"injectables/DialogsService.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":251,"title":{},"body":{"controllers/DialogsController.html":{}}}],["create(body",{"_index":220,"title":{},"body":{"controllers/DialogsController.html":{}}}],["create(data",{"_index":514,"title":{},"body":{"injectables/MessagesService.html":{}}}],["create(dialog",{"_index":274,"title":{},"body":{"injectables/DialogsService.html":{}}}],["create(user",{"_index":685,"title":{},"body":{"injectables/UsersService.html":{}}}],["createdat",{"_index":545,"title":{},"body":{"injectables/MessagesService.html":{}}}],["createdialogdto",{"_index":133,"title":{"classes/CreateDialogDto.html":{}},"body":{"classes/CreateDialogDto.html":{},"controllers/DialogsController.html":{},"coverage.html":{}}}],["createmessagdto",{"_index":156,"title":{"classes/CreateMessagDto.html":{}},"body":{"classes/CreateMessagDto.html":{},"classes/MessagesGateway.html":{},"coverage.html":{}}}],["createuserdto",{"_index":103,"title":{"classes/CreateUserDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["crypto",{"_index":611,"title":{},"body":{"classes/User.html":{}}}],["crypto.randombytes(16).tostring('hex",{"_index":614,"title":{},"body":{"classes/User.html":{}}}],["csv",{"_index":556,"title":{},"body":{"interfaces/Metadata.html":{}}}],["ctx",{"_index":320,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":323,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["data",{"_index":29,"title":{},"body":{"classes/AppLogger.html":{},"controllers/FilesController.html":{},"injectables/MessagesService.html":{}}}],["data')@apibody({type",{"_index":353,"title":{},"body":{"controllers/FilesController.html":{}}}],["declarations",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/DialogsModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":144,"title":{},"body":{"classes/CreateDialogDto.html":{},"classes/CreateMessagDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMessageDto.html":{},"classes/Dialog.html":{},"controllers/DialogsController.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":141,"title":{},"body":{"classes/CreateDialogDto.html":{},"classes/Dialog.html":{},"classes/ExceptionsFilter.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AppLogger.html":{},"injectables/AuthService.html":{},"classes/CreateDialogDto.html":{},"classes/CreateMessagDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMessageDto.html":{},"classes/Dialog.html":{},"controllers/DialogsController.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":216,"title":{},"body":{"controllers/DialogsController.html":{},"injectables/DialogsService.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{}}}],["delete(':id",{"_index":225,"title":{},"body":{"controllers/DialogsController.html":{}}}],["delete(':id/user/:userid",{"_index":234,"title":{},"body":{"controllers/DialogsController.html":{}}}],["delete(@param('id",{"_index":258,"title":{},"body":{"controllers/DialogsController.html":{}}}],["delete(id",{"_index":224,"title":{},"body":{"controllers/DialogsController.html":{},"injectables/DialogsService.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{}}}],["deletemessagedto",{"_index":178,"title":{"classes/DeleteMessageDto.html":{}},"body":{"classes/DeleteMessageDto.html":{},"classes/MessagesGateway.html":{},"coverage.html":{}}}],["dependencies",{"_index":51,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DialogsModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":546,"title":{},"body":{"injectables/MessagesService.html":{}}}],["description",{"_index":554,"title":{},"body":{"interfaces/Metadata.html":{}}}],["destination",{"_index":379,"title":{},"body":{"controllers/FilesController.html":{},"interfaces/UploadedFile.html":{}}}],["development",{"_index":774,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":160,"title":{"classes/Dialog.html":{}},"body":{"classes/CreateMessagDto.html":{},"classes/Dialog.html":{},"controllers/DialogsController.html":{},"modules/DialogsModule.html":{},"injectables/DialogsService.html":{},"classes/Message.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{},"coverage.html":{}}}],["dialog.dto",{"_index":154,"title":{},"body":{"classes/CreateDialogDto.html":{}}}],["dialog.dto.ts",{"_index":135,"title":{},"body":{"classes/CreateDialogDto.html":{},"classes/UpdateDialogDto.html":{},"coverage.html":{}}}],["dialog.dto.ts:5",{"_index":582,"title":{},"body":{"classes/UpdateDialogDto.html":{}}}],["dialog.dto.ts:7",{"_index":146,"title":{},"body":{"classes/CreateDialogDto.html":{}}}],["dialog.dto.ts:8",{"_index":581,"title":{},"body":{"classes/UpdateDialogDto.html":{}}}],["dialog.lastmessage",{"_index":531,"title":{},"body":{"injectables/MessagesService.html":{}}}],["dialog.save",{"_index":533,"title":{},"body":{"injectables/MessagesService.html":{}}}],["dialog['_id",{"_index":293,"title":{},"body":{"injectables/DialogsService.html":{}}}],["dialogid",{"_index":436,"title":{},"body":{"controllers/MessagesController.html":{},"injectables/MessagesService.html":{}}}],["dialogmodel",{"_index":273,"title":{},"body":{"injectables/DialogsService.html":{}}}],["dialogs",{"_index":214,"title":{},"body":{"controllers/DialogsController.html":{}}}],["dialogs.controller",{"_index":266,"title":{},"body":{"modules/DialogsModule.html":{}}}],["dialogs.service",{"_index":246,"title":{},"body":{"controllers/DialogsController.html":{},"modules/DialogsModule.html":{}}}],["dialogs/dialogs.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogschema",{"_index":205,"title":{},"body":{"classes/Dialog.html":{},"modules/DialogsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dialogscontroller",{"_index":210,"title":{"controllers/DialogsController.html":{}},"body":{"controllers/DialogsController.html":{},"modules/DialogsModule.html":{},"coverage.html":{}}}],["dialogsmodule",{"_index":60,"title":{"modules/DialogsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DialogsModule.html":{},"modules/MessagesModule.html":{},"modules.html":{},"overview.html":{}}}],["dialogsservice",{"_index":245,"title":{"injectables/DialogsService.html":{}},"body":{"controllers/DialogsController.html":{},"modules/DialogsModule.html":{},"injectables/DialogsService.html":{},"injectables/MessagesService.html":{},"coverage.html":{},"overview.html":{}}}],["dialogtype",{"_index":140,"title":{},"body":{"classes/CreateDialogDto.html":{},"classes/Dialog.html":{},"miscellaneous/enumerations.html":{}}}],["dialogtype.private",{"_index":143,"title":{},"body":{"classes/CreateDialogDto.html":{}}}],["dirname",{"_index":373,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["disconnected",{"_index":499,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["diskstorage",{"_index":366,"title":{},"body":{"controllers/FilesController.html":{}}}],["document",{"_index":289,"title":{},"body":{"injectables/DialogsService.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{}}}],["documentation",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["dto",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{},"controllers/DialogsController.html":{},"classes/MessagesGateway.html":{},"controllers/UsersController.html":{}}}],["dto/file",{"_index":368,"title":{},"body":{"controllers/FilesController.html":{}}}],["e2e",{"_index":785,"title":{},"body":{"index.html":{}}}],["each",{"_index":583,"title":{},"body":{"classes/UpdateDialogDto.html":{}}}],["encoding",{"_index":590,"title":{},"body":{"interfaces/UploadedFile.html":{}}}],["enum",{"_index":201,"title":{},"body":{"classes/Dialog.html":{},"interfaces/Metadata.html":{}}}],["enum.type",{"_index":565,"title":{},"body":{"interfaces/Metadata.html":{}}}],["enumerations",{"_index":761,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":11,"title":{},"body":{"classes/AppLogger.html":{},"miscellaneous/variables.html":{}}}],["error(message",{"_index":14,"title":{},"body":{"classes/AppLogger.html":{}}}],["exception",{"_index":315,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception.filter.ts",{"_index":303,"title":{},"body":{"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:10",{"_index":314,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception.filter.ts:8",{"_index":308,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exception.message",{"_index":331,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["exceptionsfilter",{"_index":301,"title":{"classes/ExceptionsFilter.html":{}},"body":{"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["expiresin",{"_index":676,"title":{},"body":{"modules/UsersModule.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/CreateDialogDto.html":{},"classes/CreateMessagDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMessageDto.html":{},"classes/Dialog.html":{},"controllers/DialogsController.html":{},"modules/DialogsModule.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"interfaces/Metadata.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/DialogsModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":362,"title":{},"body":{"controllers/FilesController.html":{},"dependencies.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/AppLogger.html":{},"classes/CreateDialogDto.html":{},"classes/CreateUserDto.html":{},"classes/ExceptionsFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["extractjwt",{"_index":397,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":408,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"classes/Dialog.html":{},"injectables/JwtStrategy.html":{},"classes/Message.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["fieldname",{"_index":591,"title":{},"body":{"interfaces/UploadedFile.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/CreateDialogDto.html":{},"classes/CreateMessagDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMessageDto.html":{},"classes/Dialog.html":{},"controllers/DialogsController.html":{},"modules/DialogsModule.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"interfaces/Metadata.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.filename",{"_index":384,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.mimetype.match(/image\\/(png|jpeg",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.originalname.split('.')[0",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fileds",{"_index":767,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fileextname",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filefilter",{"_index":380,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileinterceptor",{"_index":360,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileinterceptor('file",{"_index":377,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":32,"title":{},"body":{"classes/AppLogger.html":{},"controllers/FilesController.html":{},"interfaces/UploadedFile.html":{}}}],["files",{"_index":344,"title":{},"body":{"controllers/FilesController.html":{}}}],["files.controller",{"_index":390,"title":{},"body":{"modules/FilesModule.html":{}}}],["files/files.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["filescontroller",{"_index":342,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesmodule",{"_index":61,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["fileuploaddto",{"_index":334,"title":{"classes/FileUploadDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"coverage.html":{}}}],["fileuploaddto})@post",{"_index":354,"title":{},"body":{"controllers/FilesController.html":{}}}],["fill(null",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter",{"_index":307,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["filters",{"_index":281,"title":{},"body":{"injectables/DialogsService.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{}}}],["find",{"_index":541,"title":{},"body":{"injectables/MessagesService.html":{}}}],["find(filters",{"_index":701,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall",{"_index":217,"title":{},"body":{"controllers/DialogsController.html":{},"injectables/DialogsService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(@query",{"_index":653,"title":{},"body":{"controllers/UsersController.html":{}}}],["findall(dialog",{"_index":517,"title":{},"body":{"injectables/MessagesService.html":{}}}],["findall(dialogid",{"_index":432,"title":{},"body":{"controllers/MessagesController.html":{}}}],["findall(filters",{"_index":278,"title":{},"body":{"injectables/DialogsService.html":{}}}],["findall(query",{"_index":630,"title":{},"body":{"controllers/UsersController.html":{}}}],["findall(undefined",{"_index":688,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid",{"_index":269,"title":{},"body":{"injectables/DialogsService.html":{},"injectables/UsersService.html":{}}}],["findbyid(id",{"_index":283,"title":{},"body":{"injectables/DialogsService.html":{},"injectables/UsersService.html":{}}}],["findbyidandremove(id",{"_index":704,"title":{},"body":{"injectables/UsersService.html":{}}}],["findlastmessage",{"_index":510,"title":{},"body":{"injectables/MessagesService.html":{}}}],["findone",{"_index":680,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(matches",{"_index":691,"title":{},"body":{"injectables/UsersService.html":{}}}],["flow",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["format",{"_index":338,"title":{},"body":{"classes/FileUploadDto.html":{},"miscellaneous/variables.html":{}}}],["fs",{"_index":35,"title":{},"body":{"classes/AppLogger.html":{}}}],["fs.appendfile(filename",{"_index":41,"title":{},"body":{"classes/AppLogger.html":{}}}],["function",{"_index":567,"title":{},"body":{"interfaces/Metadata.html":{},"coverage.html":{}}}],["functions",{"_index":763,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatefilename",{"_index":370,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get(':dialogid",{"_index":434,"title":{},"body":{"controllers/MessagesController.html":{}}}],["get(':filename",{"_index":385,"title":{},"body":{"controllers/FilesController.html":{}}}],["get(':filename')@apiparam({name",{"_index":348,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('info",{"_index":661,"title":{},"body":{"controllers/UsersController.html":{}}}],["getcredsfields",{"_index":681,"title":{},"body":{"injectables/UsersService.html":{}}}],["getcredsfields(username",{"_index":693,"title":{},"body":{"injectables/UsersService.html":{}}}],["getfile",{"_index":345,"title":{},"body":{"controllers/FilesController.html":{}}}],["getfile(@param('filename",{"_index":386,"title":{},"body":{"controllers/FilesController.html":{}}}],["getfile(file",{"_index":347,"title":{},"body":{"controllers/FilesController.html":{}}}],["getprofile",{"_index":628,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile(@req",{"_index":662,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile(undefined",{"_index":633,"title":{},"body":{"controllers/UsersController.html":{}}}],["getting",{"_index":768,"title":{"index.html":{}},"body":{}}],["graph",{"_index":792,"title":{},"body":{"modules.html":{}}}],["group",{"_index":202,"title":{},"body":{"classes/Dialog.html":{},"miscellaneous/enumerations.html":{}}}],["handleconnection",{"_index":450,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["handleconnection(client",{"_index":462,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["handledeletemessage",{"_index":451,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["handledeletemessage(client",{"_index":467,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["handledisconnect",{"_index":452,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["handledisconnect(client",{"_index":470,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["handlesendmessage",{"_index":453,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["handlesendmessage(client",{"_index":472,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["handletyping",{"_index":454,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["handletyping(client",{"_index":475,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["handleupdatemessage",{"_index":455,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["handleupdatemessage(client",{"_index":478,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["hash",{"_index":596,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["host",{"_index":312,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":321,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["httpexception",{"_index":311,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["id",{"_index":227,"title":{},"body":{"controllers/DialogsController.html":{},"injectables/DialogsService.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":409,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":446,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["import",{"_index":33,"title":{},"body":{"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/CreateDialogDto.html":{},"classes/CreateMessagDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMessageDto.html":{},"classes/Dialog.html":{},"controllers/DialogsController.html":{},"modules/DialogsModule.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"interfaces/Metadata.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/DialogsModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AppLogger.html":{},"injectables/AuthService.html":{},"classes/CreateDialogDto.html":{},"classes/CreateMessagDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMessageDto.html":{},"classes/Dialog.html":{},"controllers/DialogsController.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{},"interfaces/Metadata.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/CreateDialogDto.html":{},"classes/CreateMessagDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMessageDto.html":{},"classes/Dialog.html":{},"controllers/DialogsController.html":{},"modules/DialogsModule.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"interfaces/Metadata.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":148,"title":{},"body":{"classes/CreateDialogDto.html":{},"classes/CreateUserDto.html":{}}}],["injectable",{"_index":86,"title":{"injectables/AuthService.html":{},"injectables/DialogsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/DialogsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DialogsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":288,"title":{},"body":{"injectables/DialogsService.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel('dialog",{"_index":291,"title":{},"body":{"injectables/DialogsService.html":{}}}],["injectmodel('message",{"_index":522,"title":{},"body":{"injectables/MessagesService.html":{}}}],["injectmodel('user",{"_index":696,"title":{},"body":{"injectables/UsersService.html":{}}}],["installation",{"_index":770,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":772,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":326,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["interface",{"_index":549,"title":{"interfaces/Metadata.html":{},"interfaces/UploadedFile.html":{}},"body":{"interfaces/Metadata.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["interfaces",{"_index":551,"title":{},"body":{"interfaces/Metadata.html":{},"interfaces/UploadedFile.html":{},"overview.html":{}}}],["inviteuser",{"_index":218,"title":{},"body":{"controllers/DialogsController.html":{},"injectables/DialogsService.html":{}}}],["inviteuser(@param('id",{"_index":255,"title":{},"body":{"controllers/DialogsController.html":{}}}],["inviteuser(id",{"_index":229,"title":{},"body":{"controllers/DialogsController.html":{},"injectables/DialogsService.html":{}}}],["is_poduction",{"_index":715,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isarray",{"_index":555,"title":{},"body":{"interfaces/Metadata.html":{}}}],["isenum",{"_index":151,"title":{},"body":{"classes/CreateDialogDto.html":{}}}],["isenum(dialogtype",{"_index":145,"title":{},"body":{"classes/CreateDialogDto.html":{}}}],["isimage",{"_index":371,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ismongoid",{"_index":164,"title":{},"body":{"classes/CreateMessagDto.html":{},"classes/DeleteMessageDto.html":{},"classes/UpdateMessageDto.html":{}}}],["isnumber",{"_index":578,"title":{},"body":{"classes/SearchQueries.html":{}}}],["isoptional",{"_index":579,"title":{},"body":{"classes/SearchQueries.html":{}}}],["isoptional()@isnumber",{"_index":573,"title":{},"body":{"classes/SearchQueries.html":{}}}],["isoptional()@isstring",{"_index":575,"title":{},"body":{"classes/SearchQueries.html":{}}}],["isstring",{"_index":162,"title":{},"body":{"classes/CreateMessagDto.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring({each",{"_index":147,"title":{},"body":{"classes/CreateDialogDto.html":{},"classes/UpdateDialogDto.html":{}}}],["join",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.stringify(data",{"_index":40,"title":{},"body":{"classes/AppLogger.html":{}}}],["jwt",{"_index":400,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":407,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":668,"title":{},"body":{"modules/UsersModule.html":{}}}],["jwtmodule.register",{"_index":673,"title":{},"body":{"modules/UsersModule.html":{}}}],["jwtservice",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":391,"title":{"injectables/JwtStrategy.html":{}},"body":{"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["lastmessage",{"_index":182,"title":{},"body":{"classes/Dialog.html":{},"injectables/MessagesService.html":{}}}],["lastmessage._id",{"_index":532,"title":{},"body":{"injectables/MessagesService.html":{}}}],["legend",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/DialogsModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["limit",{"_index":536,"title":{},"body":{"injectables/MessagesService.html":{},"classes/SearchQueries.html":{},"injectables/UsersService.html":{}}}],["limit(limit",{"_index":543,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/UsersService.html":{}}}],["local",{"_index":417,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localstrategy",{"_index":412,"title":{"injectables/LocalStrategy.html":{}},"body":{"injectables/LocalStrategy.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["lodash",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["logger",{"_index":8,"title":{},"body":{"classes/AppLogger.html":{},"classes/ExceptionsFilter.html":{},"classes/MessagesGateway.html":{}}}],["logger('exception",{"_index":306,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["logger('messagesgateway",{"_index":458,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["login",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["login(@req",{"_index":657,"title":{},"body":{"controllers/UsersController.html":{}}}],["login(req",{"_index":636,"title":{},"body":{"controllers/UsersController.html":{}}}],["login(user",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{}}}],["map",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matches",{"_index":176,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["matches(/(?=.*\\d)(?=.*[a",{"_index":170,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":46,"title":{},"body":{"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/CreateDialogDto.html":{},"classes/CreateMessagDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMessageDto.html":{},"classes/Dialog.html":{},"controllers/DialogsController.html":{},"modules/DialogsModule.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"interfaces/Metadata.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.round(math.random",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["members",{"_index":138,"title":{},"body":{"classes/CreateDialogDto.html":{},"classes/Dialog.html":{},"injectables/DialogsService.html":{},"classes/UpdateDialogDto.html":{}}}],["message",{"_index":25,"title":{"classes/Message.html":{}},"body":{"classes/AppLogger.html":{},"classes/Dialog.html":{},"classes/ExceptionsFilter.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"coverage.html":{}}}],["message.dto.ts",{"_index":158,"title":{},"body":{"classes/CreateMessagDto.html":{},"classes/DeleteMessageDto.html":{},"classes/UpdateMessageDto.html":{},"coverage.html":{}}}],["message.dto.ts:11",{"_index":166,"title":{},"body":{"classes/CreateMessagDto.html":{}}}],["message.dto.ts:5",{"_index":163,"title":{},"body":{"classes/CreateMessagDto.html":{},"classes/DeleteMessageDto.html":{},"classes/UpdateMessageDto.html":{}}}],["message.dto.ts:8",{"_index":165,"title":{},"body":{"classes/CreateMessagDto.html":{},"classes/UpdateMessageDto.html":{}}}],["message['_id",{"_index":525,"title":{},"body":{"injectables/MessagesService.html":{}}}],["message['body",{"_index":547,"title":{},"body":{"injectables/MessagesService.html":{}}}],["message['dialog",{"_index":534,"title":{},"body":{"injectables/MessagesService.html":{}}}],["messageid",{"_index":180,"title":{},"body":{"classes/DeleteMessageDto.html":{},"classes/MessagesGateway.html":{},"classes/UpdateMessageDto.html":{}}}],["messagemodel",{"_index":513,"title":{},"body":{"injectables/MessagesService.html":{}}}],["messages",{"_index":431,"title":{},"body":{"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{}}}],["messages.controller",{"_index":507,"title":{},"body":{"modules/MessagesModule.html":{}}}],["messages.gateway",{"_index":508,"title":{},"body":{"modules/MessagesModule.html":{}}}],["messages.service",{"_index":439,"title":{},"body":{"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{}}}],["messages/messages.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["messageschema",{"_index":427,"title":{},"body":{"classes/Message.html":{},"modules/MessagesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["messagescontroller",{"_index":429,"title":{"controllers/MessagesController.html":{}},"body":{"controllers/MessagesController.html":{},"modules/MessagesModule.html":{},"coverage.html":{}}}],["messagesgateway",{"_index":444,"title":{"classes/MessagesGateway.html":{}},"body":{"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"coverage.html":{}}}],["messagesmodule",{"_index":62,"title":{"modules/MessagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MessagesModule.html":{},"modules.html":{},"overview.html":{}}}],["messagesservice",{"_index":438,"title":{"injectables/MessagesService.html":{}},"body":{"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"coverage.html":{},"overview.html":{}}}],["metadata",{"_index":550,"title":{"interfaces/Metadata.html":{}},"body":{"interfaces/Metadata.html":{},"coverage.html":{},"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"classes/AppLogger.html":{},"injectables/AuthService.html":{},"controllers/DialogsController.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"controllers/FilesController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["mimetype",{"_index":592,"title":{},"body":{"interfaces/UploadedFile.html":{}}}],["minlength",{"_index":586,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["minlength(3",{"_index":587,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["minlength(3)@isstring",{"_index":174,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["miscellaneous",{"_index":760,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":778,"title":{},"body":{"index.html":{}}}],["model",{"_index":271,"title":{},"body":{"injectables/DialogsService.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":48,"title":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DialogsModule.html":{},"modules/FilesModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DialogsModule.html":{},"modules/FilesModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":50,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/DialogsModule.html":{},"modules/FilesModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongobadrequestcodes",{"_index":318,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["mongobadrequestcodes.includes(exception.code",{"_index":327,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["mongodb",{"_index":317,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["mongoerror",{"_index":310,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["mongoose",{"_index":199,"title":{},"body":{"classes/Dialog.html":{},"injectables/DialogsService.html":{},"classes/Message.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/DialogsModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":267,"title":{},"body":{"modules/DialogsModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot(config.db_url",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["multer",{"_index":367,"title":{},"body":{"controllers/FilesController.html":{}}}],["multi",{"_index":560,"title":{},"body":{"interfaces/Metadata.html":{}}}],["n",{"_index":39,"title":{},"body":{"classes/AppLogger.html":{}}}],["name",{"_index":22,"title":{},"body":{"classes/AppLogger.html":{},"injectables/AuthService.html":{},"controllers/DialogsController.html":{},"modules/DialogsModule.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"controllers/FilesController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"interfaces/Metadata.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":490,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["nestjs/common",{"_index":34,"title":{},"body":{"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"controllers/DialogsController.html":{},"modules/DialogsModule.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"interfaces/Metadata.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":316,"title":{},"body":{"classes/ExceptionsFilter.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":110,"title":{},"body":{"injectables/AuthService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/DialogsModule.html":{},"injectables/DialogsService.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":402,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":361,"title":{},"body":{"controllers/FilesController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":197,"title":{},"body":{"classes/Dialog.html":{},"controllers/DialogsController.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"interfaces/Metadata.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/swagger/dist/types/swagger",{"_index":564,"title":{},"body":{"interfaces/Metadata.html":{}}}],["nestjs/websockets",{"_index":484,"title":{},"body":{"classes/MessagesGateway.html":{},"dependencies.html":{}}}],["new",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"controllers/FilesController.html":{},"injectables/LocalStrategy.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["npm",{"_index":771,"title":{},"body":{"index.html":{}}}],["null",{"_index":622,"title":{},"body":{"classes/User.html":{}}}],["number",{"_index":572,"title":{},"body":{"classes/SearchQueries.html":{},"interfaces/UploadedFile.html":{}}}],["object",{"_index":30,"title":{},"body":{"classes/AppLogger.html":{},"classes/FileUploadDto.html":{}}}],["ongatewayconnection",{"_index":447,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["ongatewaydisconnect",{"_index":448,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["optional",{"_index":24,"title":{},"body":{"classes/AppLogger.html":{},"injectables/AuthService.html":{},"controllers/DialogsController.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"controllers/FilesController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{},"interfaces/Metadata.html":{},"classes/SearchQueries.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":539,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/UsersService.html":{}}}],["originalname",{"_index":593,"title":{},"body":{"interfaces/UploadedFile.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/DialogsModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":794,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":161,"title":{},"body":{"classes/CreateMessagDto.html":{},"classes/Message.html":{}}}],["owners",{"_index":139,"title":{},"body":{"classes/CreateDialogDto.html":{},"classes/Dialog.html":{},"classes/UpdateDialogDto.html":{}}}],["package",{"_index":732,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":241,"title":{},"body":{"controllers/DialogsController.html":{},"controllers/FilesController.html":{},"controllers/MessagesController.html":{}}}],["param('dialogid",{"_index":442,"title":{},"body":{"controllers/MessagesController.html":{}}}],["param('id",{"_index":253,"title":{},"body":{"controllers/DialogsController.html":{}}}],["param('userid",{"_index":256,"title":{},"body":{"controllers/DialogsController.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"classes/AppLogger.html":{},"injectables/AuthService.html":{},"controllers/DialogsController.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"controllers/FilesController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":275,"title":{},"body":{"injectables/DialogsService.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{}}}],["passport",{"_index":399,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":669,"title":{},"body":{"modules/UsersModule.html":{}}}],["passportstrategy",{"_index":401,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":405,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":106,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["path",{"_index":356,"title":{},"body":{"controllers/FilesController.html":{},"interfaces/UploadedFile.html":{}}}],["path.extname(file.originalname",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path.join.bind(this",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{},"classes/MessagesGateway.html":{}}}],["pbkdf2sync(password",{"_index":616,"title":{},"body":{"classes/User.html":{}}}],["pick",{"_index":395,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pipes",{"_index":559,"title":{},"body":{"interfaces/Metadata.html":{}}}],["post",{"_index":221,"title":{},"body":{"controllers/DialogsController.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":656,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('register",{"_index":641,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":213,"title":{},"body":{"controllers/DialogsController.html":{},"controllers/FilesController.html":{},"controllers/MessagesController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":12,"title":{},"body":{"classes/AppLogger.html":{},"injectables/AuthService.html":{},"classes/Dialog.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["process.env.node_env",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":780,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":223,"title":{},"body":{"controllers/DialogsController.html":{},"injectables/LocalStrategy.html":{},"controllers/MessagesController.html":{},"controllers/UsersController.html":{}}}],["prop",{"_index":194,"title":{},"body":{"classes/Dialog.html":{},"classes/Message.html":{},"classes/User.html":{}}}],["prop(undefined",{"_index":189,"title":{},"body":{"classes/Dialog.html":{}}}],["prop({enum",{"_index":192,"title":{},"body":{"classes/Dialog.html":{}}}],["prop({type",{"_index":185,"title":{},"body":{"classes/Dialog.html":{},"classes/Message.html":{}}}],["prop({unique",{"_index":604,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":137,"title":{},"body":{"classes/CreateDialogDto.html":{},"classes/CreateMessagDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMessageDto.html":{},"classes/Dialog.html":{},"classes/ExceptionsFilter.html":{},"classes/FileUploadDto.html":{},"classes/Message.html":{},"classes/MessagesGateway.html":{},"interfaces/Metadata.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/DialogsModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["pull",{"_index":300,"title":{},"body":{"injectables/DialogsService.html":{}}}],["push",{"_index":299,"title":{},"body":{"injectables/DialogsService.html":{}}}],["put",{"_index":240,"title":{},"body":{"controllers/DialogsController.html":{},"controllers/UsersController.html":{}}}],["put(':id",{"_index":237,"title":{},"body":{"controllers/DialogsController.html":{}}}],["put(':id/user/:userid",{"_index":231,"title":{},"body":{"controllers/DialogsController.html":{}}}],["query",{"_index":433,"title":{},"body":{"controllers/MessagesController.html":{},"controllers/UsersController.html":{}}}],["randomname",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomname}${fileextname",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"controllers/DialogsController.html":{},"injectables/DialogsService.html":{},"injectables/LocalStrategy.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ref",{"_index":187,"title":{},"body":{"classes/Dialog.html":{},"classes/Message.html":{}}}],["reflect",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["regex",{"_index":538,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/UsersService.html":{}}}],["register",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["register(@body",{"_index":659,"title":{},"body":{"controllers/UsersController.html":{}}}],["register(body",{"_index":640,"title":{},"body":{"controllers/UsersController.html":{}}}],["register(undefined",{"_index":102,"title":{},"body":{"injectables/AuthService.html":{}}}],["removeuser",{"_index":219,"title":{},"body":{"controllers/DialogsController.html":{},"injectables/DialogsService.html":{}}}],["removeuser(@param('id",{"_index":260,"title":{},"body":{"controllers/DialogsController.html":{}}}],["removeuser(id",{"_index":233,"title":{},"body":{"controllers/DialogsController.html":{},"injectables/DialogsService.html":{}}}],["req",{"_index":639,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":349,"title":{},"body":{"controllers/FilesController.html":{},"interfaces/Metadata.html":{}}}],["res",{"_index":322,"title":{},"body":{"classes/ExceptionsFilter.html":{},"controllers/FilesController.html":{}}}],["res.sendfile(file",{"_index":387,"title":{},"body":{"controllers/FilesController.html":{}}}],["res.status(400).json",{"_index":328,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/DialogsModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["rest",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{}}}],["result",{"_index":45,"title":{},"body":{"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/CreateDialogDto.html":{},"classes/CreateMessagDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMessageDto.html":{},"classes/Dialog.html":{},"controllers/DialogsController.html":{},"modules/DialogsModule.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"interfaces/Metadata.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":47,"title":{},"body":{"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/CreateDialogDto.html":{},"classes/CreateMessagDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMessageDto.html":{},"classes/Dialog.html":{},"controllers/DialogsController.html":{},"modules/DialogsModule.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"interfaces/Metadata.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retrywrites",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["return",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{},"controllers/DialogsController.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"controllers/FilesController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"interfaces/Metadata.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":26,"title":{},"body":{"classes/AppLogger.html":{},"injectables/AuthService.html":{},"controllers/DialogsController.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"controllers/FilesController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":388,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":775,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":597,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["schema",{"_index":198,"title":{},"body":{"classes/Dialog.html":{},"modules/DialogsModule.html":{},"classes/Message.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{}}}],["schema.types.objectid",{"_index":204,"title":{},"body":{"classes/Dialog.html":{},"classes/Message.html":{}}}],["schemas/dialog.schema",{"_index":155,"title":{},"body":{"classes/CreateDialogDto.html":{},"controllers/DialogsController.html":{},"modules/DialogsModule.html":{},"injectables/DialogsService.html":{}}}],["schemas/message.schema",{"_index":437,"title":{},"body":{"controllers/MessagesController.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{}}}],["schemas/user.schema",{"_index":404,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["search",{"_index":535,"title":{},"body":{"injectables/MessagesService.html":{},"classes/SearchQueries.html":{},"injectables/UsersService.html":{}}}],["searchqueries",{"_index":279,"title":{"classes/SearchQueries.html":{}},"body":{"injectables/DialogsService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"classes/SearchQueries.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["secret",{"_index":674,"title":{},"body":{"modules/UsersModule.html":{}}}],["secretorkey",{"_index":410,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select('salt",{"_index":707,"title":{},"body":{"injectables/UsersService.html":{}}}],["select(this.unselectprivatefields",{"_index":702,"title":{},"body":{"injectables/UsersService.html":{}}}],["server",{"_index":449,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["set",{"_index":298,"title":{},"body":{"injectables/DialogsService.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{}}}],["setpassword",{"_index":599,"title":{},"body":{"classes/User.html":{}}}],["setpassword(password",{"_index":609,"title":{},"body":{"classes/User.html":{}}}],["sha512",{"_index":619,"title":{},"body":{"classes/User.html":{}}}],["signoptions",{"_index":675,"title":{},"body":{"modules/UsersModule.html":{}}}],["size",{"_index":594,"title":{},"body":{"interfaces/UploadedFile.html":{}}}],["skip",{"_index":537,"title":{},"body":{"injectables/MessagesService.html":{},"classes/SearchQueries.html":{},"injectables/UsersService.html":{}}}],["skip(skip",{"_index":542,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/UsersService.html":{}}}],["socket",{"_index":463,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["socket.io",{"_index":487,"title":{},"body":{"classes/MessagesGateway.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"classes/CreateDialogDto.html":{},"classes/CreateMessagDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMessageDto.html":{},"classes/Dialog.html":{},"controllers/DialogsController.html":{},"modules/DialogsModule.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"interfaces/Metadata.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/.../auth.decorator.ts",{"_index":765,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../config.ts",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../dialog.schema.ts",{"_index":762,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../files.controller.ts",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../images.util.ts",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":766,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../message.schema.ts",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.decorators.ts",{"_index":764,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/common.module.ts",{"_index":132,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/config",{"_index":403,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/common/config.ts",{"_index":713,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators",{"_index":244,"title":{},"body":{"controllers/DialogsController.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"controllers/UsersController.html":{}}}],["src/common/decorators/auth.decorator.ts",{"_index":718,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/decorators/swagger.decorators.ts",{"_index":552,"title":{},"body":{"interfaces/Metadata.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/dto/searchqueries.dto",{"_index":290,"title":{},"body":{"injectables/DialogsService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["src/common/dto/searchqueries.dto.ts",{"_index":571,"title":{},"body":{"classes/SearchQueries.html":{},"coverage.html":{}}}],["src/common/dto/searchqueries.dto.ts:10",{"_index":574,"title":{},"body":{"classes/SearchQueries.html":{}}}],["src/common/dto/searchqueries.dto.ts:14",{"_index":577,"title":{},"body":{"classes/SearchQueries.html":{}}}],["src/common/dto/searchqueries.dto.ts:6",{"_index":576,"title":{},"body":{"classes/SearchQueries.html":{}}}],["src/common/filters/http",{"_index":302,"title":{},"body":{"classes/ExceptionsFilter.html":{},"coverage.html":{}}}],["src/common/utils/logger.ts",{"_index":6,"title":{},"body":{"classes/AppLogger.html":{},"coverage.html":{}}}],["src/common/utils/logger.ts:10",{"_index":19,"title":{},"body":{"classes/AppLogger.html":{}}}],["src/common/utils/logger.ts:5",{"_index":31,"title":{},"body":{"classes/AppLogger.html":{}}}],["src/dialogs/dialogs.controller.ts",{"_index":212,"title":{},"body":{"controllers/DialogsController.html":{},"coverage.html":{}}}],["src/dialogs/dialogs.controller.ts:24",{"_index":228,"title":{},"body":{"controllers/DialogsController.html":{}}}],["src/dialogs/dialogs.controller.ts:29",{"_index":222,"title":{},"body":{"controllers/DialogsController.html":{}}}],["src/dialogs/dialogs.controller.ts:34",{"_index":238,"title":{},"body":{"controllers/DialogsController.html":{}}}],["src/dialogs/dialogs.controller.ts:42",{"_index":232,"title":{},"body":{"controllers/DialogsController.html":{}}}],["src/dialogs/dialogs.controller.ts:47",{"_index":226,"title":{},"body":{"controllers/DialogsController.html":{}}}],["src/dialogs/dialogs.controller.ts:52",{"_index":235,"title":{},"body":{"controllers/DialogsController.html":{}}}],["src/dialogs/dialogs.module",{"_index":506,"title":{},"body":{"modules/MessagesModule.html":{}}}],["src/dialogs/dialogs.module.ts",{"_index":265,"title":{},"body":{"modules/DialogsModule.html":{}}}],["src/dialogs/dialogs.service",{"_index":521,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/dialogs/dialogs.service.ts",{"_index":268,"title":{},"body":{"injectables/DialogsService.html":{},"coverage.html":{}}}],["src/dialogs/dialogs.service.ts:14",{"_index":276,"title":{},"body":{"injectables/DialogsService.html":{}}}],["src/dialogs/dialogs.service.ts:18",{"_index":277,"title":{},"body":{"injectables/DialogsService.html":{}}}],["src/dialogs/dialogs.service.ts:22",{"_index":280,"title":{},"body":{"injectables/DialogsService.html":{}}}],["src/dialogs/dialogs.service.ts:26",{"_index":284,"title":{},"body":{"injectables/DialogsService.html":{}}}],["src/dialogs/dialogs.service.ts:30",{"_index":287,"title":{},"body":{"injectables/DialogsService.html":{}}}],["src/dialogs/dialogs.service.ts:38",{"_index":285,"title":{},"body":{"injectables/DialogsService.html":{}}}],["src/dialogs/dialogs.service.ts:48",{"_index":286,"title":{},"body":{"injectables/DialogsService.html":{}}}],["src/dialogs/dialogs.service.ts:8",{"_index":272,"title":{},"body":{"injectables/DialogsService.html":{}}}],["src/dialogs/dto/create",{"_index":134,"title":{},"body":{"classes/CreateDialogDto.html":{},"coverage.html":{}}}],["src/dialogs/dto/update",{"_index":580,"title":{},"body":{"classes/UpdateDialogDto.html":{},"coverage.html":{}}}],["src/dialogs/schemas/dialog.schema.ts",{"_index":181,"title":{},"body":{"classes/Dialog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/dialogs/schemas/dialog.schema.ts:15",{"_index":184,"title":{},"body":{"classes/Dialog.html":{}}}],["src/dialogs/schemas/dialog.schema.ts:18",{"_index":191,"title":{},"body":{"classes/Dialog.html":{}}}],["src/dialogs/schemas/dialog.schema.ts:21",{"_index":190,"title":{},"body":{"classes/Dialog.html":{}}}],["src/dialogs/schemas/dialog.schema.ts:24",{"_index":193,"title":{},"body":{"classes/Dialog.html":{}}}],["src/dialogs/schemas/dialog.schema.ts:27",{"_index":188,"title":{},"body":{"classes/Dialog.html":{}}}],["src/files/dto/file",{"_index":335,"title":{},"body":{"classes/FileUploadDto.html":{},"coverage.html":{}}}],["src/files/files.controller.ts",{"_index":343,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/files.controller.ts:34",{"_index":355,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:41",{"_index":350,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":389,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/interfaces/file.interface.ts",{"_index":588,"title":{},"body":{"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["src/files/utils/images.util.ts",{"_index":727,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":728,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/messages/dto/create",{"_index":157,"title":{},"body":{"classes/CreateMessagDto.html":{},"coverage.html":{}}}],["src/messages/dto/delete",{"_index":179,"title":{},"body":{"classes/DeleteMessageDto.html":{},"coverage.html":{}}}],["src/messages/dto/update",{"_index":584,"title":{},"body":{"classes/UpdateMessageDto.html":{},"coverage.html":{}}}],["src/messages/messages.controller.ts",{"_index":430,"title":{},"body":{"controllers/MessagesController.html":{},"coverage.html":{}}}],["src/messages/messages.controller.ts:15",{"_index":435,"title":{},"body":{"controllers/MessagesController.html":{}}}],["src/messages/messages.gateway.ts",{"_index":445,"title":{},"body":{"classes/MessagesGateway.html":{},"coverage.html":{}}}],["src/messages/messages.gateway.ts:18",{"_index":457,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["src/messages/messages.gateway.ts:21",{"_index":461,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["src/messages/messages.gateway.ts:22",{"_index":459,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["src/messages/messages.gateway.ts:25",{"_index":474,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["src/messages/messages.gateway.ts:33",{"_index":469,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["src/messages/messages.gateway.ts:39",{"_index":481,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["src/messages/messages.gateway.ts:48",{"_index":477,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["src/messages/messages.gateway.ts:52",{"_index":471,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["src/messages/messages.gateway.ts:56",{"_index":465,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["src/messages/messages.module.ts",{"_index":505,"title":{},"body":{"modules/MessagesModule.html":{}}}],["src/messages/messages.service.ts",{"_index":509,"title":{},"body":{"injectables/MessagesService.html":{},"coverage.html":{}}}],["src/messages/messages.service.ts:16",{"_index":515,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/messages/messages.service.ts:24",{"_index":516,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/messages/messages.service.ts:38",{"_index":518,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/messages/messages.service.ts:49",{"_index":519,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/messages/messages.service.ts:53",{"_index":520,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/messages/messages.service.ts:9",{"_index":512,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/messages/schemas/message.schema",{"_index":200,"title":{},"body":{"classes/Dialog.html":{}}}],["src/messages/schemas/message.schema.ts",{"_index":422,"title":{},"body":{"classes/Message.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/messages/schemas/message.schema.ts:10",{"_index":424,"title":{},"body":{"classes/Message.html":{}}}],["src/messages/schemas/message.schema.ts:13",{"_index":425,"title":{},"body":{"classes/Message.html":{}}}],["src/messages/schemas/message.schema.ts:16",{"_index":426,"title":{},"body":{"classes/Message.html":{}}}],["src/messages/schemas/message.schema.ts:7",{"_index":423,"title":{},"body":{"classes/Message.html":{}}}],["src/users/auth/auth.service.ts",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/users/auth/auth.service.ts:15",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/auth/auth.service.ts:22",{"_index":104,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/auth/auth.service.ts:29",{"_index":107,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/auth/auth.service.ts:9",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/auth/jwt.strategy.ts",{"_index":392,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/users/auth/jwt.strategy.ts:17",{"_index":396,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/users/auth/jwt.strategy.ts:8",{"_index":393,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/users/auth/local.strategy.ts",{"_index":413,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/users/auth/local.strategy.ts:12",{"_index":416,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/users/auth/local.strategy.ts:7",{"_index":415,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/users/dto/create",{"_index":167,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":585,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{},"classes/Dialog.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":595,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:11",{"_index":606,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:15",{"_index":603,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:19",{"_index":602,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:21",{"_index":610,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:28",{"_index":608,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:8",{"_index":600,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":626,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:30",{"_index":632,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:37",{"_index":638,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:42",{"_index":642,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:48",{"_index":635,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:54",{"_index":645,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":667,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/users.service.ts",{"_index":678,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":683,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:16",{"_index":686,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:20",{"_index":695,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:28",{"_index":689,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:39",{"_index":690,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:43",{"_index":692,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:49",{"_index":687,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:55",{"_index":694,"title":{},"body":{"injectables/UsersService.html":{}}}],["ssv",{"_index":557,"title":{},"body":{"interfaces/Metadata.html":{}}}],["start",{"_index":776,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":779,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":781,"title":{},"body":{"index.html":{}}}],["started",{"_index":769,"title":{"index.html":{}},"body":{}}],["statements",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["statuscode",{"_index":329,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["storage",{"_index":378,"title":{},"body":{"controllers/FilesController.html":{}}}],["strategy",{"_index":398,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"classes/AppLogger.html":{},"injectables/AuthService.html":{},"classes/CreateDialogDto.html":{},"classes/CreateMessagDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMessageDto.html":{},"classes/Dialog.html":{},"controllers/DialogsController.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"interfaces/Metadata.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["string(_id",{"_index":529,"title":{},"body":{"injectables/MessagesService.html":{}}}],["string(dialog.lastmessage",{"_index":528,"title":{},"body":{"injectables/MessagesService.html":{}}}],["stringifieddata",{"_index":38,"title":{},"body":{"classes/AppLogger.html":{}}}],["subscribemessage",{"_index":482,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["subscribemessage('delete",{"_index":468,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["subscribemessage('send",{"_index":473,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["subscribemessage('typing",{"_index":476,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["subscribemessage('update",{"_index":480,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["super",{"_index":406,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.catch(exception",{"_index":333,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["super.error(message",{"_index":44,"title":{},"body":{"classes/AppLogger.html":{}}}],["support",{"_index":789,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":790,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["swaggerenumtype",{"_index":561,"title":{},"body":{"interfaces/Metadata.html":{}}}],["switch",{"_index":324,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["table",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":784,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":787,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":786,"title":{},"body":{"index.html":{}}}],["tests",{"_index":783,"title":{},"body":{"index.html":{}}}],["this.authservice.login(req.user",{"_index":658,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.authservice.register(body",{"_index":660,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.authservice.validate(username",{"_index":420,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.dialogmodel.create(dialog",{"_index":292,"title":{},"body":{"injectables/DialogsService.html":{}}}],["this.dialogmodel.find",{"_index":295,"title":{},"body":{"injectables/DialogsService.html":{}}}],["this.dialogmodel.findbyid(id",{"_index":296,"title":{},"body":{"injectables/DialogsService.html":{}}}],["this.dialogmodel.findbyidanddelete(id",{"_index":294,"title":{},"body":{"injectables/DialogsService.html":{}}}],["this.dialogmodel.findbyidandupdate",{"_index":297,"title":{},"body":{"injectables/DialogsService.html":{}}}],["this.dialogsservice.create(body",{"_index":252,"title":{},"body":{"controllers/DialogsController.html":{}}}],["this.dialogsservice.delete(id",{"_index":259,"title":{},"body":{"controllers/DialogsController.html":{}}}],["this.dialogsservice.findall",{"_index":250,"title":{},"body":{"controllers/DialogsController.html":{}}}],["this.dialogsservice.findbyid(dialogid",{"_index":527,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.dialogsservice.inviteuser(id",{"_index":257,"title":{},"body":{"controllers/DialogsController.html":{}}}],["this.dialogsservice.removeuser(id",{"_index":261,"title":{},"body":{"controllers/DialogsController.html":{}}}],["this.dialogsservice.update(dialog",{"_index":524,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.dialogsservice.update(id",{"_index":254,"title":{},"body":{"controllers/DialogsController.html":{}}}],["this.findlastmessage",{"_index":530,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.hash",{"_index":615,"title":{},"body":{"classes/User.html":{}}}],["this.jwtservice.sign(payload",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error(exception",{"_index":332,"title":{},"body":{"classes/ExceptionsFilter.html":{}}}],["this.logger.log(`client",{"_index":498,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["this.messagemodel",{"_index":540,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.messagemodel.create(data",{"_index":523,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.messagemodel.findbyidanddelete(id",{"_index":526,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.messagemodel.findbyidandupdate",{"_index":548,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.messagemodel.findone({}).sort",{"_index":544,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.messagesservice.create(payload",{"_index":491,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["this.messagesservice.delete(messageid",{"_index":493,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["this.messagesservice.findall(dialogid",{"_index":443,"title":{},"body":{"controllers/MessagesController.html":{}}}],["this.messagesservice.update(messageid",{"_index":495,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["this.salt",{"_index":613,"title":{},"body":{"classes/User.html":{}}}],["this.usermodel",{"_index":700,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.create(user",{"_index":697,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id).select(this.unselectprivatefields",{"_index":703,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyidandupdate",{"_index":699,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(rest",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findall(query",{"_index":654,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyid(_id",{"_index":663,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getcredsfields(username",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.update(_id",{"_index":664,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.writelogtofile('error.log",{"_index":43,"title":{},"body":{"classes/AppLogger.html":{}}}],["throw",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FilesController.html":{},"injectables/LocalStrategy.html":{}}}],["timestamps",{"_index":208,"title":{},"body":{"classes/Dialog.html":{},"classes/Message.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["tostring('hex",{"_index":620,"title":{},"body":{"classes/User.html":{}}}],["trace",{"_index":16,"title":{},"body":{"classes/AppLogger.html":{}}}],["transform",{"_index":489,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["transformer",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateDialogDto.html":{},"classes/Dialog.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"controllers/FilesController.html":{},"classes/Message.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{},"classes/UpdateDialogDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["tsv",{"_index":558,"title":{},"body":{"interfaces/Metadata.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/AppLogger.html":{},"injectables/AuthService.html":{},"classes/CreateDialogDto.html":{},"classes/CreateMessagDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMessageDto.html":{},"classes/Dialog.html":{},"controllers/DialogsController.html":{},"injectables/DialogsService.html":{},"classes/ExceptionsFilter.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{},"interfaces/Metadata.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UploadedFile.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typegoose/typegoose",{"_index":196,"title":{},"body":{"classes/Dialog.html":{},"classes/Message.html":{},"classes/User.html":{},"dependencies.html":{}}}],["ui",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":421,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":186,"title":{},"body":{"classes/Dialog.html":{},"classes/Message.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{}}}],["unique",{"_index":612,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":782,"title":{},"body":{"index.html":{}}}],["unselectprivatefields",{"_index":679,"title":{},"body":{"injectables/UsersService.html":{}}}],["update",{"_index":153,"title":{},"body":{"classes/CreateDialogDto.html":{},"classes/CreateUserDto.html":{},"controllers/DialogsController.html":{},"injectables/DialogsService.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{}}}],["update(id",{"_index":236,"title":{},"body":{"controllers/DialogsController.html":{},"injectables/DialogsService.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{}}}],["updatedialogdto",{"_index":136,"title":{"classes/UpdateDialogDto.html":{}},"body":{"classes/CreateDialogDto.html":{},"controllers/DialogsController.html":{},"classes/UpdateDialogDto.html":{},"coverage.html":{}}}],["updatedialogdto:5",{"_index":150,"title":{},"body":{"classes/CreateDialogDto.html":{}}}],["updatedialogdto:8",{"_index":149,"title":{},"body":{"classes/CreateDialogDto.html":{}}}],["updatemessagedto",{"_index":479,"title":{"classes/UpdateMessageDto.html":{}},"body":{"classes/MessagesGateway.html":{},"classes/UpdateMessageDto.html":{},"coverage.html":{}}}],["updateprofile",{"_index":629,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateprofile(undefined",{"_index":643,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuserdto",{"_index":169,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["updateuserdto:6",{"_index":175,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["upload.dto",{"_index":369,"title":{},"body":{"controllers/FilesController.html":{}}}],["upload.dto.ts",{"_index":336,"title":{},"body":{"classes/FileUploadDto.html":{},"coverage.html":{}}}],["upload.dto.ts:5",{"_index":340,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["uploadedfile",{"_index":359,"title":{"interfaces/UploadedFile.html":{}},"body":{"controllers/FilesController.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadfile",{"_index":346,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(@uploadedfile",{"_index":382,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":351,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploads",{"_index":374,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["usecreateindex",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["usefindandmodify",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":239,"title":{},"body":{"controllers/DialogsController.html":{},"controllers/MessagesController.html":{},"controllers/UsersController.html":{}}}],["useguards(authguard('local",{"_index":655,"title":{},"body":{"controllers/UsersController.html":{}}}],["useinterceptors",{"_index":357,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":352,"title":{},"body":{"controllers/FilesController.html":{}}}],["usenewurlparser",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["usepipes",{"_index":485,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["usepipes(new",{"_index":488,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["user",{"_index":100,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"classes/Dialog.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Message.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.checkpassword(password",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.dto",{"_index":177,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts",{"_index":168,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:6",{"_index":173,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.save",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.setpassword(password",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["user['_id",{"_index":698,"title":{},"body":{"injectables/UsersService.html":{}}}],["user['username",{"_index":705,"title":{},"body":{"injectables/UsersService.html":{}}}],["userid",{"_index":230,"title":{},"body":{"controllers/DialogsController.html":{},"injectables/DialogsService.html":{},"classes/MessagesGateway.html":{}}}],["usermodel",{"_index":684,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["usernamefield",{"_index":419,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userpromise",{"_index":706,"title":{},"body":{"injectables/UsersService.html":{}}}],["userpromise.exec",{"_index":708,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":627,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":672,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":650,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":623,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":625,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":63,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":97,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/images.util",{"_index":372,"title":{},"body":{"controllers/FilesController.html":{}}}],["validate",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(undefined",{"_index":394,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":105,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["validationpipe",{"_index":486,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["validator",{"_index":152,"title":{},"body":{"classes/CreateDialogDto.html":{},"classes/CreateMessagDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteMessageDto.html":{},"classes/SearchQueries.html":{},"classes/UpdateDialogDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":142,"title":{},"body":{"classes/CreateDialogDto.html":{},"classes/ExceptionsFilter.html":{},"classes/MessagesGateway.html":{},"injectables/MessagesService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":799,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["versionkey",{"_index":207,"title":{},"body":{"classes/Dialog.html":{},"classes/Message.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":27,"title":{},"body":{"classes/AppLogger.html":{},"classes/MessagesGateway.html":{},"classes/User.html":{}}}],["watch",{"_index":777,"title":{},"body":{"index.html":{}}}],["websocketgateway",{"_index":483,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["websocketserver",{"_index":460,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["writelogtofile",{"_index":13,"title":{},"body":{"classes/AppLogger.html":{}}}],["writelogtofile(filename",{"_index":28,"title":{},"body":{"classes/AppLogger.html":{}}}],["yes",{"_index":282,"title":{},"body":{"injectables/DialogsService.html":{},"controllers/UsersController.html":{}}}],["z])(?=.*[a",{"_index":171,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z]).{8",{"_index":172,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/DialogsModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AppLogger.html":{"url":"classes/AppLogger.html","title":"class - AppLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/utils/logger.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Logger\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                    Private\n                                writeLogToFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, trace: string, context: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/utils/logger.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            writeLogToFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeLogToFile(fileName: string, data: object)\n                \n            \n\n\n            \n                \n                    Defined in src/common/utils/logger.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport * as fs from 'fs';\n\nexport class AppLogger extends Logger {\n  private writeLogToFile(fileName: string, data: object) {\n    const stringifiedData = '\\n' + JSON.stringify(data);\n    fs.appendFile(fileName, stringifiedData, console.error);\n  }\n\n  error(message: string, trace: string, context: string) {\n    this.writeLogToFile('error.log', { context, message, trace });\n\n    super.error(message, trace);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nDialogsModule\n\nDialogsModule\n\nAppModule -->\n\nDialogsModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nMessagesModule\n\nMessagesModule\n\nAppModule -->\n\nMessagesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            DialogsModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            MessagesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { CommonModule } from './common/common.module';\nimport { UsersModule } from './users/users.module';\nimport { MessagesModule } from './messages/messages.module';\nimport { DialogsModule } from './dialogs/dialogs.module';\nimport { FilesModule } from './files/files.module';\nimport config from './common/config';\n\n@Module({\n  imports: [\n    MongooseModule.forRoot(config.DB_URL, {\n      useCreateIndex: true,\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useFindAndModify: false,\n      retryWrites: false,\n    }),\n    CommonModule,\n    UsersModule,\n    MessagesModule,\n    DialogsModule,\n    FilesModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/users/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(undefined: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/auth/auth.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(userName: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/auth/auth.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as _ from 'lodash';\nimport { User } from 'src/users/schemas/user.schema';\nimport { UsersService } from 'src/users/users.service';\nimport { CreateUserDto } from '../dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly usersService: UsersService,\n  ) {}\n\n  async login(user: User) {\n    const payload = _.pick(user, ['_id', 'userName']);\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n\n  async register({ password, ...rest }: CreateUserDto) {\n    const user = await this.usersService.create(rest);\n    user.setPassword(password);\n\n    return await user.save();\n  }\n\n  async validate(userName: string, password: string) {\n    const user = await this.usersService.getCredsFields(userName);\n    if (!user) throw new UnauthorizedException();\n\n    return user.checkPassword(password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDialogDto.html":{"url":"classes/CreateDialogDto.html","title":"class - CreateDialogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDialogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dialogs/dto/create-dialog.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        UpdateDialogDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                            \n                                members\n                            \n                            \n                                owners\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DialogType\n\n                        \n                    \n                    \n                        \n                            Default value : DialogType.private\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEnum(DialogType)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/dto/create-dialog.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString({each: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UpdateDialogDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UpdateDialogDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owners\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString({each: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UpdateDialogDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UpdateDialogDto:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum } from 'class-validator';\nimport { UpdateDialogDto } from './update-dialog.dto';\nimport { DialogType } from '../schemas/dialog.schema';\n\nexport class CreateDialogDto extends UpdateDialogDto {\n  @IsEnum(DialogType)\n  type: DialogType = DialogType.private;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMessagDto.html":{"url":"classes/CreateMessagDto.html","title":"class - CreateMessagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMessagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messages/dto/create-message.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                dialog\n                            \n                            \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/messages/dto/create-message.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/messages/dto/create-message.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/messages/dto/create-message.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsMongoId } from 'class-validator';\n\nexport class CreateMessagDto {\n  @IsString()\n  body: string;\n\n  @IsMongoId()\n  dialog: string;\n\n  @IsMongoId()\n  owner: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        UpdateUserDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Matches(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(3)@IsString()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UpdateUserDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         UpdateUserDto:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Matches } from 'class-validator';\nimport { UpdateUserDto } from './update-user.dto';\n\nexport class CreateUserDto extends UpdateUserDto {\n  @Matches(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/)\n  readonly password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMessageDto.html":{"url":"classes/DeleteMessageDto.html","title":"class - DeleteMessageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMessageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messages/dto/delete-message.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                messageId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messageId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/messages/dto/delete-message.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId } from 'class-validator';\n\nexport class DeleteMessageDto {\n  @IsMongoId()\n  messageId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Dialog.html":{"url":"classes/Dialog.html","title":"class - Dialog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Dialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dialogs/schemas/dialog.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                lastMessage\n                            \n                            \n                                members\n                            \n                            \n                                owners\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/schemas/dialog.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message | string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({type: undefined, ref: 'Message'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/schemas/dialog.schema.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[] | string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/schemas/dialog.schema.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owners\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[] | string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/schemas/dialog.schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DialogType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: undefined, default: 'private'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/schemas/dialog.schema.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, buildSchema } from '@typegoose/typegoose';\nimport { ApiHideProperty } from '@nestjs/swagger';\nimport { Schema } from 'mongoose';\nimport { Message } from 'src/messages/schemas/message.schema';\nimport { User } from 'src/users/schemas/user.schema';\n\nexport enum DialogType {\n  private = 'private',\n  group = 'group',\n  channel = 'channel',\n}\n\nexport class Dialog {\n  @ApiHideProperty()\n  _id: string;\n\n  @prop([{ type: Schema.Types.ObjectId, ref: 'User' }])\n  owners: User[] | string[];\n\n  @prop([{ type: Schema.Types.ObjectId, ref: 'User' }])\n  members: User[] | string[];\n\n  @prop({ enum: ['private', 'group', 'channel'], default: 'private' })\n  type: DialogType;\n\n  @prop({ type: Schema.Types.ObjectId, ref: 'Message' })\n  lastMessage: Message | string;\n}\n\nexport const DialogSchema = buildSchema(Dialog, {\n  versionKey: false,\n  timestamps: true,\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DialogsController.html":{"url":"controllers/DialogsController.html","title":"controller - DialogsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DialogsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dialogs/dialogs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dialogs\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                inviteUser\n                            \n                            \n                                removeUser\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(body: CreateDialogDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/dialogs/dialogs.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateDialogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/dialogs/dialogs.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/dialogs/dialogs.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            inviteUser\n                        \n                        \n                    \n                \n            \n            \n                \ninviteUser(id: string, userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id/user/:userId')\n                \n            \n\n            \n                \n                    Defined in src/dialogs/dialogs.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeUser\n                        \n                        \n                    \n                \n            \n            \n                \nremoveUser(id: string, userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id/user/:userId')\n                \n            \n\n            \n                \n                    Defined in src/dialogs/dialogs.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, body: UpdateDialogDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/dialogs/dialogs.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdateDialogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  UseGuards,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Auth } from 'src/common/decorators';\nimport { Dialog } from './schemas/dialog.schema';\nimport { CreateDialogDto, UpdateDialogDto } from './dto';\nimport { DialogsService } from './dialogs.service';\n\nAuth();\n@ApiTags('Dialogs')\n@Controller('dialogs')\nexport class DialogsController {\n  constructor(private readonly dialogsService: DialogsService) {}\n\n  @Get()\n  findAll(): Promise {\n    return this.dialogsService.findAll();\n  }\n\n  @Post()\n  create(@Body() body: CreateDialogDto): Promise {\n    return this.dialogsService.create(body);\n  }\n\n  @Put(':id')\n  update(\n    @Param('id') id: string,\n    @Body() body: UpdateDialogDto,\n  ): Promise {\n    return this.dialogsService.update(id, body);\n  }\n\n  @Put(':id/user/:userId')\n  inviteUser(@Param('id') id: string, @Param('userId') userId: string) {\n    return this.dialogsService.inviteUser(id, userId);\n  }\n\n  @Delete(':id')\n  delete(@Param('id') id: string) {\n    return this.dialogsService.delete(id);\n  }\n\n  @Delete(':id/user/:userId')\n  removeUser(@Param('id') id: string, @Param('userId') userId: string) {\n    return this.dialogsService.removeUser(id, userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DialogsModule.html":{"url":"modules/DialogsModule.html","title":"module - DialogsModule","body":"\n                   \n\n\n\n\n    Modules\n    DialogsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DialogsModule\n\n\n\ncluster_DialogsModule_exports\n\n\n\ncluster_DialogsModule_providers\n\n\n\n\nDialogsService \n\nDialogsService \n\n\n\nDialogsModule\n\nDialogsModule\n\nDialogsService  -->\n\nDialogsModule->DialogsService \n\n\n\n\n\nDialogsService\n\nDialogsService\n\nDialogsModule -->\n\nDialogsService->DialogsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/dialogs/dialogs.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DialogsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DialogsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DialogsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { DialogSchema } from './schemas/dialog.schema';\nimport { DialogsController } from './dialogs.controller';\nimport { DialogsService } from './dialogs.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: 'Dialog', schema: DialogSchema }]),\n  ],\n  controllers: [DialogsController],\n  providers: [DialogsService],\n  exports: [DialogsService],\n})\nexport class DialogsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DialogsService.html":{"url":"injectables/DialogsService.html","title":"injectable - DialogsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DialogsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dialogs/dialogs.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                inviteUser\n                            \n                            \n                                removeUser\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogModel: Model<>)\n                    \n                \n                        \n                            \n                                Defined in src/dialogs/dialogs.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogModel\n                                                  \n                                                        \n                                                                    Model<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(dialog: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/dialogs.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dialog\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/dialogs.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filters?: SearchQueries)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/dialogs.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                SearchQueries\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/dialogs.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            inviteUser\n                        \n                        \n                    \n                \n            \n            \n                \ninviteUser(id, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/dialogs.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeUser\n                        \n                        \n                    \n                \n            \n            \n                \nremoveUser(id, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/dialogs.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id, dialog: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/dialogs.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dialog\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Document } from 'mongoose';\nimport { Dialog } from './schemas/dialog.schema';\nimport { SearchQueries } from 'src/common/dto/SearchQueries.dto';\n\n@Injectable()\nexport class DialogsService {\n  constructor(\n    @InjectModel('Dialog')\n    private readonly dialogModel: Model,\n  ) {}\n\n  create(dialog: Partial) {\n    return this.dialogModel.create(dialog);\n  }\n\n  delete(id: Dialog['_id']) {\n    return this.dialogModel.findByIdAndDelete(id);\n  }\n\n  async findAll(filters?: SearchQueries) {\n    return await this.dialogModel.find({});\n  }\n\n  findById(id: Dialog['_id']) {\n    return this.dialogModel.findById(id);\n  }\n\n  async update(id: Dialog['_id'], dialog: Partial) {\n    return await this.dialogModel.findByIdAndUpdate(\n      id,\n      { $set: dialog },\n      { new: true },\n    );\n  }\n\n  inviteUser(id, userId) {\n    return this.dialogModel.findByIdAndUpdate(\n      id,\n      {\n        $set: { $push: { members: userId } },\n      },\n      { new: true },\n    );\n  }\n\n  removeUser(id, userId) {\n    return this.dialogModel.findByIdAndUpdate(\n      id,\n      {\n        $set: { $pull: { members: userId } },\n      },\n      { new: true },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExceptionsFilter.html":{"url":"classes/ExceptionsFilter.html","title":"class - ExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/http-exception.filter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Logger\n\n                        \n                    \n                    \n                        \n                            Default value : new Logger('Exception filter')\n                        \n                    \n                        \n                            \n                                    Defined in src/common/filters/http-exception.filter.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: MongoError | HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/http-exception.filter.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            MongoError | HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, HttpException } from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\nimport { Logger } from '@nestjs/common';\nimport { MongoError } from 'mongodb';\n\n@Catch()\nexport class ExceptionsFilter extends BaseExceptionFilter {\n  private logger: Logger = new Logger('Exception filter');\n\n  catch(exception: MongoError | HttpException, host: ArgumentsHost) {\n    const MongoBadRequestCodes = [11000];\n    const ctx = host.switchToHttp();\n    const res = ctx.getResponse();\n\n    switch (true) {\n      case exception instanceof MongoError &&\n        MongoBadRequestCodes.includes(exception.code):\n        return res.status(400).json({\n          statusCode: 400,\n          message: exception.message,\n        });\n      default:\n        this.logger.error(exception);\n        super.catch(exception, host);\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileUploadDto.html":{"url":"classes/FileUploadDto.html","title":"class - FileUploadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileUploadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/file-upload.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                file\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            file\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'string', format: 'binary'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/files/dto/file-upload.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class FileUploadDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  file: object;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFile\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFile\n                        \n                        \n                    \n                \n            \n            \n                \ngetFile(file, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':filename')@ApiParam({name: 'filename', required: true})\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadFile\n                        \n                        \n                    \n                \n            \n            \n                \nuploadFile(file)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBody({type: FileUploadDto})@Post()\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { path: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  UseInterceptors,\n  Post,\n  BadRequestException,\n  UploadedFile,\n  Res,\n  Param,\n  Get,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiTags, ApiBody, ApiConsumes, ApiParam } from '@nestjs/swagger';\nimport { diskStorage } from 'multer';\nimport { FileUploadDto } from './dto/file-upload.dto';\nimport { generateFileName, isImage } from './utils/images.util';\n\nconst dirName = './uploads';\n\n@ApiTags('Files')\n@Controller('files')\nexport class FilesController {\n  @UseInterceptors(\n    FileInterceptor('file', {\n      storage: diskStorage({\n        destination: dirName,\n        filename: generateFileName,\n      }),\n      fileFilter: isImage,\n    }),\n  )\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({ type: FileUploadDto })\n  @Post()\n  uploadFile(@UploadedFile() file) {\n    if (!file) throw new BadRequestException('File is required');\n    return { path: `${file.filename}` };\n  }\n\n  @Get(':filename')\n  @ApiParam({ name: 'filename', required: true })\n  getFile(@Param('filename') file, @Res() res) {\n    return res.sendFile(file, { root: dirName });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesController } from './files.controller';\n\n@Module({\n  controllers: [FilesController],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/users/auth/jwt.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(undefined: Pick)\n                \n            \n\n\n            \n                \n                    Defined in src/users/auth/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                Pick\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport config from 'src/common/config';\nimport { User } from '../schemas/user.schema';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: config.JWT_SECRET,\n    });\n  }\n\n  async validate({ _id, userName }: Pick) {\n    return { _id, userName };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/users/auth/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(userName: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/auth/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super({ usernameField: 'userName' });\n  }\n\n  async validate(userName: string, password: string): Promise {\n    const user = await this.authService.validate(userName, password);\n    if (!user) {\n      throw new UnauthorizedException('Invalid userName or password');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messages/schemas/message.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                body\n                            \n                            \n                                dialog\n                            \n                            \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/messages/schemas/message.schema.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/messages/schemas/message.schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({type: undefined, ref: 'Dialog'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/messages/schemas/message.schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({type: undefined, ref: 'User'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/messages/schemas/message.schema.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop, buildSchema } from '@typegoose/typegoose';\nimport { ApiHideProperty } from '@nestjs/swagger';\nimport { Schema } from 'mongoose';\n\nexport class Message {\n  @ApiHideProperty()\n  _id: string;\n\n  @prop()\n  body: string;\n\n  @prop({ type: Schema.Types.ObjectId, ref: 'Dialog' })\n  dialog: string;\n\n  @prop({ type: Schema.Types.ObjectId, ref: 'User' })\n  owner: string;\n}\n\nexport const MessageSchema = buildSchema(Message, {\n  versionKey: false,\n  timestamps: true,\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MessagesController.html":{"url":"controllers/MessagesController.html","title":"controller - MessagesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MessagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messages/messages.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                messages\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(dialogId: string, query: SearchQueries)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':dialogId')\n                \n            \n\n            \n                \n                    Defined in src/messages/messages.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dialogId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                SearchQueries\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseGuards, Get, Param, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { SearchQueries } from 'src/common/dto/SearchQueries.dto';\nimport { Message } from './schemas/message.schema';\nimport { MessagesService } from './messages.service';\nimport { Auth } from 'src/common/decorators';\n\n@Auth()\n@ApiTags('Messages')\n@Controller('messages')\nexport class MessagesController {\n  constructor(private readonly messagesService: MessagesService) {}\n\n  @Get(':dialogId')\n  findAll(\n    @Param('dialogId') dialogId: string,\n    @Query() query: SearchQueries,\n  ): Promise {\n    return this.messagesService.findAll(dialogId, query);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessagesGateway.html":{"url":"classes/MessagesGateway.html","title":"class - MessagesGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessagesGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messages/messages.gateway.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayConnection\n                        OnGatewayDisconnect\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleConnection\n                            \n                            \n                                    Async\n                                handleDeleteMessage\n                            \n                            \n                                handleDisconnect\n                            \n                            \n                                    Async\n                                handleSendMessage\n                            \n                            \n                                    Async\n                                handleTyping\n                            \n                            \n                                    Async\n                                handleUpdateMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messagesService: MessagesService)\n                    \n                \n                        \n                            \n                                Defined in src/messages/messages.gateway.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messagesService\n                                                  \n                                                        \n                                                                        MessagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Logger\n\n                        \n                    \n                    \n                        \n                            Default value : new Logger('MessagesGateway')\n                        \n                    \n                        \n                            \n                                    Defined in src/messages/messages.gateway.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Server\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @WebSocketServer()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/messages/messages.gateway.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleConnection\n                        \n                        \n                    \n                \n            \n            \n                \nhandleConnection(client: Socket, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/messages/messages.gateway.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handleDeleteMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleDeleteMessage(client: Socket, undefined: DeleteMessageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('delete')\n                \n            \n\n            \n                \n                    Defined in src/messages/messages.gateway.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                DeleteMessageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleDisconnect\n                        \n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(client: Socket)\n                \n            \n\n\n            \n                \n                    Defined in src/messages/messages.gateway.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handleSendMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleSendMessage(client: Socket, payload: CreateMessagDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('send')\n                \n            \n\n            \n                \n                    Defined in src/messages/messages.gateway.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                CreateMessagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handleTyping\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleTyping(client: Socket, undefined)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('typing')\n                \n            \n\n            \n                \n                    Defined in src/messages/messages.gateway.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handleUpdateMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleUpdateMessage(client: Socket, undefined: UpdateMessageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('update')\n                \n            \n\n            \n                \n                    Defined in src/messages/messages.gateway.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                UpdateMessageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n} from '@nestjs/websockets';\nimport { Logger, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { Socket, Server } from 'socket.io';\nimport { Auth } from 'src/common/decorators';\nimport { CreateMessagDto, DeleteMessageDto, UpdateMessageDto } from './dto';\nimport { MessagesService } from './messages.service';\n\n// @Auth()\n@UsePipes(new ValidationPipe({ transform: true }))\n@WebSocketGateway({ namespace: 'messages' })\nexport class MessagesGateway\n  implements OnGatewayConnection, OnGatewayDisconnect {\n  constructor(private readonly messagesService: MessagesService) {}\n\n  @WebSocketServer() server: Server;\n  private readonly logger: Logger = new Logger('MessagesGateway');\n\n  @SubscribeMessage('send')\n  async handleSendMessage(client: Socket, payload: CreateMessagDto) {\n    const message = await this.messagesService.create(payload);\n    const { dialog } = message;\n\n    client.to(dialog).emit('send', message);\n  }\n\n  @SubscribeMessage('delete')\n  async handleDeleteMessage(client: Socket, { messageId }: DeleteMessageDto) {\n    const message = await this.messagesService.delete(messageId);\n    client.to(message.dialog).emit('delete', message);\n  }\n\n  @SubscribeMessage('update')\n  async handleUpdateMessage(\n    client: Socket,\n    { messageId, body }: UpdateMessageDto,\n  ) {\n    const message = await this.messagesService.update(messageId, body);\n    client.to(message.dialog).emit('update', message);\n  }\n\n  @SubscribeMessage('typing')\n  async handleTyping(client: Socket, { userId, dialog }) {\n    client.to(dialog).emit('typing', { userId });\n  }\n\n  handleDisconnect(client: Socket) {\n    this.logger.log(`Client disconnected: ${client.id}`);\n  }\n\n  handleConnection(client: Socket, ...args: any[]) {\n    this.logger.log(`Client connected: ${client.id}`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagesModule.html":{"url":"modules/MessagesModule.html","title":"module - MessagesModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MessagesModule\n\n\n\ncluster_MessagesModule_imports\n\n\n\ncluster_MessagesModule_providers\n\n\n\n\nDialogsModule\n\nDialogsModule\n\n\n\nMessagesModule\n\nMessagesModule\n\nMessagesModule -->\n\nDialogsModule->MessagesModule\n\n\n\n\n\nMessagesService\n\nMessagesService\n\nMessagesModule -->\n\nMessagesService->MessagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/messages/messages.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MessagesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MessagesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DialogsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { DialogsModule } from 'src/dialogs/dialogs.module';\nimport { MessageSchema } from './schemas/message.schema';\nimport { MessagesController } from './messages.controller';\nimport { MessagesGateway } from './messages.gateway';\nimport { MessagesService } from './messages.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: 'Message', schema: MessageSchema }]),\n    DialogsModule,\n  ],\n  controllers: [MessagesController],\n  providers: [MessagesService, MessagesGateway],\n})\nexport class MessagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagesService.html":{"url":"injectables/MessagesService.html","title":"injectable - MessagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messages/messages.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findLastMessage\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messageModel: Model<>, dialogsService: DialogsService)\n                    \n                \n                        \n                            \n                                Defined in src/messages/messages.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageModel\n                                                  \n                                                        \n                                                                    Model<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogsService\n                                                  \n                                                        \n                                                                        DialogsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/messages/messages.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id)\n                \n            \n\n\n            \n                \n                    Defined in src/messages/messages.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(dialog, undefined: SearchQueries)\n                \n            \n\n\n            \n                \n                    Defined in src/messages/messages.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    dialog\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                                SearchQueries\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findLastMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findLastMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/messages/messages.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id, body)\n                \n            \n\n\n            \n                \n                    Defined in src/messages/messages.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Document } from 'mongoose';\nimport { SearchQueries } from 'src/common/dto/SearchQueries.dto';\nimport { DialogsService } from 'src/dialogs/dialogs.service';\nimport { Message } from './schemas/message.schema';\n\n@Injectable()\nexport class MessagesService {\n  constructor(\n    @InjectModel('Message')\n    private readonly messageModel: Model,\n    private readonly dialogsService: DialogsService,\n  ) {}\n\n  async create(data: Partial) {\n    const message = await this.messageModel.create(data);\n    const { _id, dialog } = message;\n\n    await this.dialogsService.update(dialog, { lastMessage: _id });\n    return message;\n  }\n\n  async delete(id: Message['_id']) {\n    const message = await this.messageModel.findByIdAndDelete(id);\n    const { _id, dialog: dialogId } = message;\n\n    let dialog = await this.dialogsService.findById(dialogId);\n    if (String(dialog.lastMessage) === String(_id)) {\n      const lastMessage = await this.findLastMessage();\n      dialog.lastMessage = lastMessage ? lastMessage._id : '';\n      await dialog.save();\n    }\n\n    return message;\n  }\n\n  async findAll(\n    dialog: Message['dialog'],\n    { search, limit, skip }: SearchQueries = {},\n  ) {\n    const filters = search ? { body: { $regex: search, $options: 'i' } } : {};\n    return await this.messageModel\n      .find({ dialog, ...filters })\n      .skip(skip)\n      .limit(limit);\n  }\n\n  async findLastMessage() {\n    return this.messageModel.findOne({}).sort({ createdAt: 'desc' });\n  }\n\n  async update(id: Message['_id'], body: Message['body']) {\n    return await this.messageModel.findByIdAndUpdate(\n      id,\n      { $set: { body } },\n      { new: true },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Metadata.html":{"url":"interfaces/Metadata.html","title":"interface - Metadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Metadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/decorators/swagger.decorators.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        collectionFormat\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        enum\n                                \n                                \n                                            Optional\n                                        isArray\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        required\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collectionFormat\n                                    \n                                \n                                \n                                    \n                                        collectionFormat:     \"csv\" | \"ssv\" | \"tsv\" | \"pipes\" | \"multi\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"csv\" | \"ssv\" | \"tsv\" | \"pipes\" | \"multi\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enum\n                                    \n                                \n                                \n                                    \n                                        enum:     SwaggerEnumType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SwaggerEnumType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isArray\n                                    \n                                \n                                \n                                    \n                                        isArray:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiQuery } from '@nestjs/swagger';\nimport { SwaggerEnumType } from '@nestjs/swagger/dist/types/swagger-enum.type';\nimport { applyDecorators } from '@nestjs/common';\n\ninterface Metadata {\n  name: string;\n  description?: string;\n  required?: boolean;\n  type?: any;\n  isArray?: boolean;\n  enum?: SwaggerEnumType;\n  collectionFormat?: 'csv' | 'ssv' | 'tsv' | 'pipes' | 'multi';\n}\n\nexport function ApiQueries(fileds: Metadata[]) {\n  return applyDecorators(...fileds.map(query => ApiQuery(query)));\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchQueries.html":{"url":"classes/SearchQueries.html","title":"class - SearchQueries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchQueries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/SearchQueries.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                search\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common/dto/SearchQueries.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common/dto/SearchQueries.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common/dto/SearchQueries.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNumber, IsOptional } from 'class-validator';\n\nexport class SearchQueries {\n  @IsOptional()\n  @IsString()\n  search?: string;\n\n  @IsOptional()\n  @IsNumber()\n  limit?: number;\n\n  @IsOptional()\n  @IsNumber()\n  skip?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDialogDto.html":{"url":"classes/UpdateDialogDto.html","title":"class - UpdateDialogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDialogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dialogs/dto/update-dialog.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                members\n                            \n                            \n                                owners\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString({each: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/dto/update-dialog.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owners\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString({each: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/dto/update-dialog.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\nexport class UpdateDialogDto {\n  @IsString({ each: true })\n  owners: string[];\n\n  @IsString({ each: true })\n  members: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMessageDto.html":{"url":"classes/UpdateMessageDto.html","title":"class - UpdateMessageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMessageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messages/dto/update-message.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                messageId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/messages/dto/update-message.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messageId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/messages/dto/update-message.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsMongoId } from 'class-validator';\n\nexport class UpdateMessageDto {\n  @IsMongoId()\n  messageId: string;\n\n  @IsString()\n  body: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(3)@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/update-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, MinLength } from 'class-validator';\n\nexport class UpdateUserDto {\n  @MinLength(3)\n  @IsString()\n  userName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadedFile.html":{"url":"interfaces/UploadedFile.html","title":"interface - UploadedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UploadedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/interfaces/file.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        buffer\n                                \n                                \n                                        destination\n                                \n                                \n                                        encoding\n                                \n                                \n                                        fieldname\n                                \n                                \n                                        filename\n                                \n                                \n                                        mimetype\n                                \n                                \n                                        originalname\n                                \n                                \n                                        path\n                                \n                                \n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buffer\n                                    \n                                \n                                \n                                    \n                                        buffer:     Buffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldname\n                                    \n                                \n                                \n                                    \n                                        fieldname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalname\n                                    \n                                \n                                \n                                    \n                                        originalname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UploadedFile {\n  fieldname: string;\n  originalname: string;\n  encoding: string;\n  mimetype: string;\n  size: number;\n  destination: string;\n  filename: string;\n  path: string;\n  buffer: Buffer;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                hash\n                            \n                            \n                                salt\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkPassword\n                            \n                            \n                                setPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hash\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            salt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({unique: true, minlength: 3})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkPassword\n                        \n                        \n                    \n                \n            \n            \n                \ncheckPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/schemas/user.schema.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPassword\n                        \n                        \n                    \n                \n            \n            \n                \nsetPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/schemas/user.schema.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { prop, buildSchema } from '@typegoose/typegoose';\nimport { ApiHideProperty } from '@nestjs/swagger';\nimport * as _ from 'lodash';\nimport * as crypto from 'crypto';\n\nexport class User {\n  @ApiHideProperty()\n  _id: string;\n\n  @prop({ unique: true, minlength: 3 })\n  userName: string;\n\n  @ApiHideProperty()\n  @prop()\n  salt: string;\n\n  @ApiHideProperty()\n  @prop()\n  hash: string;\n\n  setPassword(password: string) {\n    this.salt = crypto.randomBytes(16).toString('hex');\n    this.hash = crypto\n      .pbkdf2Sync(password, this.salt, 10000, 512, 'sha512')\n      .toString('hex');\n  }\n\n  checkPassword(password: string) {\n    const hash = crypto\n      .pbkdf2Sync(password, this.salt, 10000, 512, 'sha512')\n      .toString('hex');\n    return this.hash === hash ? _.pick(this, ['_id', 'userName']) : null;\n  }\n}\n\nexport const UserSchema = buildSchema(User, {\n  versionKey: false,\n  timestamps: true,\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                getProfile\n                            \n                            \n                                login\n                            \n                            \n                                register\n                            \n                            \n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(query?: SearchQueries)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Auth()@Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                SearchQueries\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(undefined)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Auth()@Get('info')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiQueries(undefined)@UseGuards(undefined)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(body: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateProfile\n                        \n                        \n                    \n                \n            \n            \n                \nupdateProfile(undefined, body: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Auth()@Put()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  UseGuards,\n  Post,\n  Body,\n  Req,\n  Get,\n  Put,\n  Query,\n} from '@nestjs/common';\nimport { ApiTags, ApiBearerAuth } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { SearchQueries } from 'src/common/dto/SearchQueries.dto';\nimport { ApiQueries, Auth } from 'src/common/decorators';\nimport { User } from './schemas/user.schema';\nimport { CreateUserDto, UpdateUserDto } from './dto';\nimport { AuthService } from './auth/auth.service';\nimport { UsersService } from './users.service';\n\n@ApiTags('Users')\n@Controller('users')\nexport class UsersController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n  ) {}\n\n  @Auth()\n  @Get()\n  findAll(@Query() query?: SearchQueries) {\n    return this.usersService.findAll(query);\n  }\n\n  @ApiQueries([{ name: 'userName' }, { name: 'password' }])\n  @UseGuards(AuthGuard('local'))\n  @Post('login')\n  login(@Req() req) {\n    return this.authService.login(req.user);\n  }\n\n  @Post('register')\n  register(@Body() body: CreateUserDto): Promise {\n    return this.authService.register(body);\n  }\n\n  @Auth()\n  @Get('info')\n  getProfile(@Req() { user: { _id } }): Promise {\n    return this.usersService.findById(_id);\n  }\n\n  @Auth()\n  @Put()\n  updateProfile(\n    @Req() { user: { _id } },\n    @Body() body: UpdateUserDto,\n  ): Promise {\n    return this.usersService.update(_id, body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAuthService->UsersModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nUsersModule -->\n\nJwtStrategy->UsersModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nUsersModule -->\n\nLocalStrategy->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport config from '../common/config';\nimport { AuthService } from './auth/auth.service';\nimport { LocalStrategy } from './auth/local.strategy';\nimport { JwtStrategy } from './auth/jwt.strategy';\nimport { UserSchema } from './schemas/user.schema';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: 'User', schema: UserSchema }]),\n    JwtModule.register({\n      secret: config.JWT_SECRET,\n      signOptions: { expiresIn: '2592000000s' },\n    }),\n    PassportModule,\n  ],\n  controllers: [UsersController],\n  providers: [UsersService, AuthService, LocalStrategy, JwtStrategy],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                unselectPrivateFields\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getCredsFields\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model<>)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                    Model<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(user: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(undefined: SearchQueries)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                                SearchQueries\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(matches: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matches\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCredsFields\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCredsFields(userName)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id, user: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            unselectPrivateFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '-salt -hash'\n                        \n                    \n                        \n                            \n                                    Defined in src/users/users.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Document } from 'mongoose';\nimport * as _ from 'lodash';\nimport { SearchQueries } from 'src/common/dto/SearchQueries.dto';\nimport { User } from './schemas/user.schema';\n\n@Injectable()\nexport class UsersService {\n  private readonly unselectPrivateFields = '-salt -hash';\n\n  constructor(\n    @InjectModel('User') private readonly userModel: Model,\n  ) {}\n\n  create(user: Partial) {\n    return this.userModel.create(user);\n  }\n\n  async update(id: User['_id'], user: Partial) {\n    return await this.userModel.findByIdAndUpdate(\n      id,\n      { $set: user },\n      { new: true },\n    );\n  }\n\n  findAll({ search, limit, skip }: SearchQueries = {}) {\n    const filters = search\n      ? { userName: { $regex: search, $options: 'i' } }\n      : {};\n    return this.userModel\n      .find(filters)\n      .select(this.unselectPrivateFields)\n      .skip(skip)\n      .limit(limit);\n  }\n\n  async findById(id: User['_id']) {\n    return await this.userModel.findById(id).select(this.unselectPrivateFields);\n  }\n\n  async findOne(matches: Partial) {\n    return await this.userModel\n      .findOne(matches)\n      .select(this.unselectPrivateFields);\n  }\n\n  delete(id: User['_id']) {\n    return this.userModel\n      .findByIdAndRemove(id)\n      .select(this.unselectPrivateFields);\n  }\n\n  async getCredsFields(userName: User['userName']) {\n    const userPromise = this.userModel\n      .findOne({ userName })\n      .select('salt hash _id userName');\n    const user = await userPromise.exec();\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/common/config.ts\n            \n            variable\n            IS_PODUCTION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/config.ts\n            \n            variable\n            root\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/auth.decorator.ts\n            \n            function\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/swagger.decorators.ts\n            \n            interface\n            Metadata\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/decorators/swagger.decorators.ts\n            \n            function\n            ApiQueries\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dto/SearchQueries.dto.ts\n            \n            class\n            SearchQueries\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/filters/http-exception.filter.ts\n            \n            class\n            ExceptionsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/utils/logger.ts\n            \n            class\n            AppLogger\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dialogs/dialogs.controller.ts\n            \n            controller\n            DialogsController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/dialogs/dialogs.service.ts\n            \n            injectable\n            DialogsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/dialogs/dto/create-dialog.dto.ts\n            \n            class\n            CreateDialogDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/dialogs/dto/update-dialog.dto.ts\n            \n            class\n            UpdateDialogDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dialogs/schemas/dialog.schema.ts\n            \n            class\n            Dialog\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/dialogs/schemas/dialog.schema.ts\n            \n            variable\n            DialogSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/file-upload.dto.ts\n            \n            class\n            FileUploadDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            variable\n            dirName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/interfaces/file.interface.ts\n            \n            interface\n            UploadedFile\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/files/utils/images.util.ts\n            \n            variable\n            generateFileName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/utils/images.util.ts\n            \n            variable\n            isImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/messages/dto/create-message.dto.ts\n            \n            class\n            CreateMessagDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/messages/dto/delete-message.dto.ts\n            \n            class\n            DeleteMessageDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/messages/dto/update-message.dto.ts\n            \n            class\n            UpdateMessageDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/messages/messages.controller.ts\n            \n            controller\n            MessagesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/messages/messages.gateway.ts\n            \n            class\n            MessagesGateway\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/messages/messages.service.ts\n            \n            injectable\n            MessagesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/messages/schemas/message.schema.ts\n            \n            class\n            Message\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/messages/schemas/message.schema.ts\n            \n            variable\n            MessageSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/jwt : ^7.0.0\n        \n            @nestjs/mongoose : ^6.4.0\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/platform-socket.io : ^7.0.7\n        \n            @nestjs/serve-static : ^2.1.0\n        \n            @nestjs/swagger : ^4.5.1\n        \n            @nestjs/websockets : ^7.0.7\n        \n            @typegoose/typegoose : ^6.4.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.11.1\n        \n            dotenv-flow : ^3.1.0\n        \n            lodash : ^4.17.15\n        \n            mongoose : ^5.9.7\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DialogType   (src/.../dialog.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/dialogs/schemas/dialog.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        DialogType\n                    \n                \n                        \n                            \n                                 private\n                            \n                        \n                        \n                            \n                                Value : private\n                            \n                        \n                        \n                            \n                                 group\n                            \n                        \n                        \n                            \n                                Value : group\n                            \n                        \n                        \n                            \n                                 channel\n                            \n                        \n                        \n                            \n                                Value : channel\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiQueries   (src/.../swagger.decorators.ts)\n                        \n                        \n                            Auth   (src/.../auth.decorator.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/swagger.decorators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ApiQueries\n                        \n                        \n                    \n                \n            \n            \n                \nApiQueries(fileds)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileds\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/common/decorators/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Auth\n                        \n                        \n                    \n                \n            \n            \n                \nAuth()\n                \n            \n\n\n\n\n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DialogsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_DialogsModule\n\n\n\ncluster_DialogsModule_exports\n\n\n\ncluster_DialogsModule_providers\n\n\n\ncluster_MessagesModule\n\n\n\ncluster_MessagesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nDialogsModule\n\nDialogsModule\n\n\n\nMessagesModule\n\nMessagesModule\n\nMessagesModule -->\n\nDialogsModule->MessagesModule\n\n\n\nAppModule -->\n\nDialogsModule->AppModule\n\n\n\n\n\nDialogsService \n\nDialogsService \n\nDialogsService  -->\n\nDialogsModule->DialogsService \n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\nAppModule -->\n\nMessagesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nDialogsService\n\nDialogsService\n\nDialogsModule -->\n\nDialogsService->DialogsModule\n\n\n\n\n\nMessagesService\n\nMessagesService\n\nMessagesModule -->\n\nMessagesService->MessagesModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nUsersModule -->\n\nAuthService->UsersModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nUsersModule -->\n\nJwtStrategy->UsersModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nUsersModule -->\n\nLocalStrategy->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DialogSchema   (src/.../dialog.schema.ts)\n                        \n                        \n                            dirName   (src/.../files.controller.ts)\n                        \n                        \n                            generateFileName   (src/.../images.util.ts)\n                        \n                        \n                            IS_PODUCTION   (src/.../config.ts)\n                        \n                        \n                            isImage   (src/.../images.util.ts)\n                        \n                        \n                            MessageSchema   (src/.../message.schema.ts)\n                        \n                        \n                            root   (src/.../config.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/dialogs/schemas/dialog.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DialogSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : buildSchema(Dialog, {\n  versionKey: false,\n  timestamps: true,\n})\n                        \n                    \n\n\n            \n        \n\n    src/files/files.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dirName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : './uploads'\n                        \n                    \n\n\n            \n        \n\n    src/files/utils/images.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateFileName\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (req, file, callback) => {\n  const name = file.originalname.split('.')[0];\n  const fileExtName = path.extname(file.originalname);\n  const randomName = Array(4)\n    .fill(null)\n    .map(() => Math.round(Math.random() * 16).toString(16))\n    .join('');\n  callback(null, `${name}-${randomName}${fileExtName}`);\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (req, file: UploadedFile, callback) => {\n  if (!file.mimetype.match(/image\\/(png|jpeg)/)) {\n    const error = 'Not allowed image format!';\n    return callback(new BadRequestException(error), false);\n  }\n  callback(null, true);\n}\n                        \n                    \n\n\n            \n        \n\n    src/common/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            IS_PODUCTION\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env.NODE_ENV === 'production'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            root\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : path.join.bind(this, __dirname)\n                        \n                    \n\n\n            \n        \n\n    src/messages/schemas/message.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MessageSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : buildSchema(Message, {\n  versionKey: false,\n  timestamps: true,\n})\n                        \n                    \n\n\n            \n        \n\n    src/users/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : buildSchema(User, {\n  versionKey: false,\n  timestamps: true,\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
